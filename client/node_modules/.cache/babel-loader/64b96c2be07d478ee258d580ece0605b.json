{"ast":null,"code":"import * as TYPES from '../types';\nconst initialState = {\n  isAppLoading: true,\n  isSidebarCollapsed: false,\n  passwordConfirmationModalProps: {\n    isVisible: false,\n    successCallback: null\n  }\n};\n\nconst global = (state = initialState, action) => {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case TYPES.APP_LOADING_CHANGED:\n      {\n        return { ...state,\n          isAppLoading: payload\n        };\n      }\n\n    case TYPES.SIDEBAR_COLLAPSED_STATE_CHANGED:\n      {\n        return { ...state,\n          isSidebarCollapsed: payload\n        };\n      }\n\n    case TYPES.SIDEBAR_COLLAPSED_STATE_TOGGLED:\n      {\n        return { ...state,\n          isSidebarCollapsed: !state.isSidebarCollapsed\n        };\n      }\n\n    case TYPES.PASSWORD_CONFIRMATION_MODAL_PROPS_CHANGED:\n      {\n        return { ...state,\n          passwordConfirmationModalProps: { ...state.passwordConfirmationModalProps,\n            ...payload\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default global;","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/redux/reducers/global.js"],"names":["TYPES","initialState","isAppLoading","isSidebarCollapsed","passwordConfirmationModalProps","isVisible","successCallback","global","state","action","payload","type","APP_LOADING_CHANGED","SIDEBAR_COLLAPSED_STATE_CHANGED","SIDEBAR_COLLAPSED_STATE_TOGGLED","PASSWORD_CONFIRMATION_MODAL_PROPS_CHANGED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,IADG;AAEjBC,EAAAA,kBAAkB,EAAE,KAFH;AAGjBC,EAAAA,8BAA8B,EAAE;AAC5BC,IAAAA,SAAS,EAAE,KADiB;AAE5BC,IAAAA,eAAe,EAAE;AAFW;AAHf,CAArB;;AASA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AAEA,UAAQA,MAAM,CAACE,IAAf;AACI,SAAKX,KAAK,CAACY,mBAAX;AAAgC;AAC5B,eAAO,EACH,GAAGJ,KADA;AAEHN,UAAAA,YAAY,EAAEQ;AAFX,SAAP;AAIH;;AACD,SAAKV,KAAK,CAACa,+BAAX;AAA4C;AACxC,eAAO,EACH,GAAGL,KADA;AAEHL,UAAAA,kBAAkB,EAAEO;AAFjB,SAAP;AAIH;;AACD,SAAKV,KAAK,CAACc,+BAAX;AAA4C;AACxC,eAAO,EACH,GAAGN,KADA;AAEHL,UAAAA,kBAAkB,EAAE,CAACK,KAAK,CAACL;AAFxB,SAAP;AAIH;;AACD,SAAKH,KAAK,CAACe,yCAAX;AAAsD;AAClD,eAAO,EACH,GAAGP,KADA;AAEHJ,UAAAA,8BAA8B,EAAE,EAC5B,GAAGI,KAAK,CAACJ,8BADmB;AAE5B,eAAGM;AAFyB;AAF7B,SAAP;AAOH;;AACD;AACI,aAAOF,KAAP;AA7BR;AA+BH,CAlCD;;AAoCA,eAAeD,MAAf","sourcesContent":["import * as TYPES from '../types';\r\n\r\nconst initialState = {\r\n    isAppLoading: true,\r\n    isSidebarCollapsed: false,\r\n    passwordConfirmationModalProps: {\r\n        isVisible: false,\r\n        successCallback: null,\r\n    },\r\n};\r\n\r\nconst global = (state = initialState, action) => {\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n        case TYPES.APP_LOADING_CHANGED: {\r\n            return {\r\n                ...state,\r\n                isAppLoading: payload,\r\n            };\r\n        }\r\n        case TYPES.SIDEBAR_COLLAPSED_STATE_CHANGED: {\r\n            return {\r\n                ...state,\r\n                isSidebarCollapsed: payload,\r\n            };\r\n        }\r\n        case TYPES.SIDEBAR_COLLAPSED_STATE_TOGGLED: {\r\n            return {\r\n                ...state,\r\n                isSidebarCollapsed: !state.isSidebarCollapsed,\r\n            };\r\n        }\r\n        case TYPES.PASSWORD_CONFIRMATION_MODAL_PROPS_CHANGED: {\r\n            return {\r\n                ...state,\r\n                passwordConfirmationModalProps: {\r\n                    ...state.passwordConfirmationModalProps,\r\n                    ...payload,\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default global;\r\n"]},"metadata":{},"sourceType":"module"}