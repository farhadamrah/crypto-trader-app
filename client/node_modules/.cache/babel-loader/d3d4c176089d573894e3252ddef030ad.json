{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\shared\\\\Tooltip\\\\Tooltip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tooltip = props => {\n  _s();\n\n  const [showTooltip, setShowTooltip] = useState(false);\n  const {\n    text,\n    children,\n    className,\n    ...tooltipProps\n  } = props;\n  const TOOLTIP_STYLES = {\n    [TOOLTIP_POSITION.top]: 'bottom-6 right-24',\n    [TOOLTIP_POSITION.right]: '-top-1 left-20',\n    [TOOLTIP_POSITION.bottom]: 'top-6 right-24'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    onClick: () => setShowTooltip(!showTooltip),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `bg-black opacity-70 text-white py-1 text-center w-36 absolute -top-1 -left-20 rounded ${className}`,\n      ...tooltipProps,\n      children: 'text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tooltip, \"MlKqB7CDspaiqeinDL2ipSY+OVU=\");\n\n_c = Tooltip;\nTooltip.propTypes = {};\nexport default Tooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/shared/Tooltip/Tooltip.js"],"names":["React","useState","PropTypes","TOOLTIP_POSITION","Tooltip","props","showTooltip","setShowTooltip","text","children","className","tooltipProps","TOOLTIP_STYLES","top","right","bottom","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,SAAlB;AAA6B,OAAGC;AAAhC,MAAiDN,KAAvD;AAEA,QAAMO,cAAc,GAAG;AACnB,KAACT,gBAAgB,CAACU,GAAlB,GAAwB,mBADL;AAEnB,KAACV,gBAAgB,CAACW,KAAlB,GAA0B,gBAFP;AAGnB,KAACX,gBAAgB,CAACY,MAAlB,GAA2B;AAHR,GAAvB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAE,MAAMR,cAAc,CAAC,CAACD,WAAF,CAAvD;AAAA,4BACI;AACI,MAAA,SAAS,EAAG,yFAAwFI,SAAU,EADlH;AAAA,SAEQC,YAFR;AAAA,gBAIK;AAJL;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKF,QAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAtBD;;GAAML,O;;KAAAA,O;AAwBNA,OAAO,CAACY,SAAR,GAAoB,EAApB;AAEA,eAAeZ,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\n\nconst Tooltip = props => {\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    const { text, children, className, ...tooltipProps } = props;\n\n    const TOOLTIP_STYLES = {\n        [TOOLTIP_POSITION.top]: 'bottom-6 right-24',\n        [TOOLTIP_POSITION.right]: '-top-1 left-20',\n        [TOOLTIP_POSITION.bottom]: 'top-6 right-24',\n    };\n\n    return (\n        <div className='relative' onClick={() => setShowTooltip(!showTooltip)}>\n            <span\n                className={`bg-black opacity-70 text-white py-1 text-center w-36 absolute -top-1 -left-20 rounded ${className}`}\n                {...tooltipProps}\n            >\n                {'text'}\n            </span>\n            {children}\n        </div>\n    );\n};\n\nTooltip.propTypes = {};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}