{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Routes\\\\Routes.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\nimport { isPrivateRoute } from '../../utils/route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst routes = [{\n  path: ROUTES.login.path,\n  component: Login\n}, {\n  path: ROUTES.register.path,\n  component: Register\n}, {\n  path: ROUTES.dashboard.path,\n  component: Dashboard\n}];\n\nconst Routes = props => {\n  _s();\n\n  let location = useLocation();\n  isPrivateRoute(location.pathname);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isPrivateRoute(location.pathname) ? /*#__PURE__*/_jsxDEV(Layout, {\n      children: routes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        component: route.component\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Route, {\n      path: location.pathname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Routes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Routes;\nRoutes.propTypes = {\n  path: PropTypes.oneOf(Object.values(ROUTES))\n};\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Routes/Routes.js"],"names":["PropTypes","Route","useLocation","ROUTES","Login","Register","Dashboard","Layout","isPrivateRoute","routes","path","login","component","register","dashboard","Routes","props","location","pathname","map","route","propTypes","oneOf","Object","values"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,MAAMC,MAAM,GAAG,CACX;AACIC,EAAAA,IAAI,EAAEP,MAAM,CAACQ,KAAP,CAAaD,IADvB;AAEIE,EAAAA,SAAS,EAAER;AAFf,CADW,EAKX;AACIM,EAAAA,IAAI,EAAEP,MAAM,CAACU,QAAP,CAAgBH,IAD1B;AAEIE,EAAAA,SAAS,EAAEP;AAFf,CALW,EASX;AACIK,EAAAA,IAAI,EAAEP,MAAM,CAACW,SAAP,CAAiBJ,IAD3B;AAEIE,EAAAA,SAAS,EAAEN;AAFf,CATW,CAAf;;AAeA,MAAMS,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,MAAIC,QAAQ,GAAGf,WAAW,EAA1B;AAEAM,EAAAA,cAAc,CAACS,QAAQ,CAACC,QAAV,CAAd;AAEA,sBACI;AAAA,cACKV,cAAc,CAACS,QAAQ,CAACC,QAAV,CAAd,gBACG,QAAC,MAAD;AAAA,gBACKT,MAAM,CAACU,GAAP,CAAWC,KAAK,iBACb,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACV,IAAnB;AAAyB,QAAA,SAAS,EAAEU,KAAK,CAACR;AAA1C,SAA0DQ,KAAK,CAACV,IAAhE;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEO,QAAQ,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA;AARR,mBADJ;AAaH,CAlBD;;GAAMH,M;UACab,W;;;KADba,M;AAoBNA,MAAM,CAACM,SAAP,GAAmB;AACfX,EAAAA,IAAI,EAAEV,SAAS,CAACsB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAcrB,MAAd,CAAhB;AADS,CAAnB;AAIA,eAAeY,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\n\nimport { isPrivateRoute } from '../../utils/route';\n\nconst routes = [\n    {\n        path: ROUTES.login.path,\n        component: Login,\n    },\n    {\n        path: ROUTES.register.path,\n        component: Register,\n    },\n    {\n        path: ROUTES.dashboard.path,\n        component: Dashboard,\n    },\n];\n\nconst Routes = props => {\n    let location = useLocation();\n\n    isPrivateRoute(location.pathname);\n\n    return (\n        <>\n            {isPrivateRoute(location.pathname) ? (\n                <Layout>\n                    {routes.map(route => (\n                        <Route path={route.path} component={route.component} key={route.path} />\n                    ))}\n                </Layout>\n            ) : (\n                <Route path={location.pathname} />\n            )}\n        </>\n    );\n};\n\nRoutes.propTypes = {\n    path: PropTypes.oneOf(Object.values(ROUTES)),\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}