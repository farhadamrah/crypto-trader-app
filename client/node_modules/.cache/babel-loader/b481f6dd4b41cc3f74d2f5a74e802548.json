{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Configurations\\\\Configurations.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport Configuration from './Configuration/Configuration';\nimport NewConfiguration from './NewConfiguration/NewConfiguration';\nimport { useState } from 'react';\nimport EditConfiguration from './EditConfiguration/EditConfiguration';\nimport CreateConfigurationModal from './CreateConfigurationModal.js/CreateConfigurationModal';\nimport useModal from '../../hooks/useModal';\nimport useDrawer from '../../hooks/useDrawer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Configurations = props => {\n  _s();\n\n  const [onEditDrawerOpen, onEditDrawerClose] = useDrawer();\n  const [isVisibleConfigurationModal, onNewConfigurationModalShow, onNewConfigurationModalClose, onNewConfigurationModalOk, onNewConfigurationModalCancel] = useModal();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 py-10 flex flex-wrap gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(Configuration, {\n        title: 'Configuration 1',\n        text: \"Today's New's Source, MGT\",\n        onEditDrawerOpen: onEditDrawerOpen,\n        onEditDrawerClose: onEditDrawerClose,\n        children: \"Nat config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Configuration, {\n        title: 'Configuration 2',\n        text: \"Today's New's Source\",\n        onEditDrawerOpen: onEditDrawerOpen,\n        onEditDrawerClose: onEditDrawerClose,\n        children: \"Nat config 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Configuration, {\n        title: 'Configuration 2',\n        text: \"Today's New's Source\",\n        onEditDrawerOpen: onEditDrawerOpen,\n        onEditDrawerClose: onEditDrawerClose,\n        children: \"Nat config 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewConfiguration, {\n        onNewConfigurationModalShow: onNewConfigurationModalShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditConfiguration, {\n      onEditDrawerOpen: onEditDrawerOpen,\n      onEditDrawerClose: onEditDrawerClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateConfigurationModal, {\n      isVisibleConfigurationModal: isVisibleConfigurationModal,\n      onNewConfigurationModalShow: onNewConfigurationModalShow,\n      onNewConfigurationModalClose: onNewConfigurationModalClose,\n      onNewConfigurationModalOk: onNewConfigurationModalOk,\n      onNewConfigurationModalCancel: onNewConfigurationModalCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Configurations, \"rJJbX9WKqSRj25doQVk0AvzHBR4=\", false, function () {\n  return [useDrawer, useModal];\n});\n\n_c = Configurations;\nConfigurations.propTypes = {};\nexport default Configurations; // const [isEditDrawerVisible, setIsEditDrawerVisible] = useState(false);\n// const [isNewConfigurationModalShow, setIsNewConfigurationModalShow] = useState(false);\n//\n// const onEditDrawerOpen = () => {\n//     setIsEditDrawerVisible(true);\n// };\n//\n// const onEditDrawerClose = () => {\n//     setIsEditDrawerVisible(false);\n// };\n//\n// const onNewConfigurationModalShow = () => {\n//     setIsNewConfigurationModalShow(true);\n// };\n//\n// const onNewConfigurationModalClose = () => {\n//     setIsNewConfigurationModalShow(false);\n// };\n//\n// const onNewConfigurationModalOk = () => {\n//     setIsNewConfigurationModalShow(false);\n// };\n//\n// const onNewConfigurationModalCancel = () => {\n//     setIsNewConfigurationModalShow(false);\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Configurations\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Configurations/Configurations.js"],"names":["PropTypes","Configuration","NewConfiguration","useState","EditConfiguration","CreateConfigurationModal","useModal","useDrawer","Configurations","props","onEditDrawerOpen","onEditDrawerClose","isVisibleConfigurationModal","onNewConfigurationModalShow","onNewConfigurationModalClose","onNewConfigurationModalOk","onNewConfigurationModalCancel","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,wBAAP,MAAqC,wDAArC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCJ,SAAS,EAAvD;AAEA,QAAM,CACFK,2BADE,EAEFC,2BAFE,EAGFC,4BAHE,EAIFC,yBAJE,EAKFC,6BALE,IAMFV,QAAQ,EANZ;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE,iBADX;AAEI,QAAA,IAAI,EAAE,2BAFV;AAGI,QAAA,gBAAgB,EAAEI,gBAHtB;AAII,QAAA,iBAAiB,EAAEC,iBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE,iBADX;AAEI,QAAA,IAAI,EAAE,sBAFV;AAGI,QAAA,gBAAgB,EAAED,gBAHtB;AAII,QAAA,iBAAiB,EAAEC,iBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE,iBADX;AAEI,QAAA,IAAI,EAAE,sBAFV;AAGI,QAAA,gBAAgB,EAAED,gBAHtB;AAII,QAAA,iBAAiB,EAAEC,iBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAyBI,QAAC,gBAAD;AAAkB,QAAA,2BAA2B,EAAEE;AAA/C;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA4BI,QAAC,iBAAD;AAAmB,MAAA,gBAAgB,EAAEH,gBAArC;AAAuD,MAAA,iBAAiB,EAAEC;AAA1E;AAAA;AAAA;AAAA;AAAA,YA5BJ,eA6BI,QAAC,wBAAD;AACI,MAAA,2BAA2B,EAAEC,2BADjC;AAEI,MAAA,2BAA2B,EAAEC,2BAFjC;AAGI,MAAA,4BAA4B,EAAEC,4BAHlC;AAII,MAAA,yBAAyB,EAAEC,yBAJ/B;AAKI,MAAA,6BAA6B,EAAEC;AALnC;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA,kBADJ;AAuCH,CAlDD;;GAAMR,c;UAC4CD,S,EAQ1CD,Q;;;KATFE,c;AAoDNA,cAAc,CAACS,SAAf,GAA2B,EAA3B;AAEA,eAAeT,cAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import PropTypes from 'prop-types';\nimport Configuration from './Configuration/Configuration';\nimport NewConfiguration from './NewConfiguration/NewConfiguration';\nimport { useState } from 'react';\nimport EditConfiguration from './EditConfiguration/EditConfiguration';\nimport CreateConfigurationModal from './CreateConfigurationModal.js/CreateConfigurationModal';\n\nimport useModal from '../../hooks/useModal';\nimport useDrawer from '../../hooks/useDrawer';\n\nconst Configurations = props => {\n    const [onEditDrawerOpen, onEditDrawerClose] = useDrawer();\n\n    const [\n        isVisibleConfigurationModal,\n        onNewConfigurationModalShow,\n        onNewConfigurationModalClose,\n        onNewConfigurationModalOk,\n        onNewConfigurationModalCancel,\n    ] = useModal();\n\n    return (\n        <>\n            <div className='px-6 py-10 flex flex-wrap gap-6'>\n                <Configuration\n                    title={'Configuration 1'}\n                    text={\"Today's New's Source, MGT\"}\n                    onEditDrawerOpen={onEditDrawerOpen}\n                    onEditDrawerClose={onEditDrawerClose}\n                >\n                    Nat config\n                </Configuration>\n                <Configuration\n                    title={'Configuration 2'}\n                    text={\"Today's New's Source\"}\n                    onEditDrawerOpen={onEditDrawerOpen}\n                    onEditDrawerClose={onEditDrawerClose}\n                >\n                    Nat config 2\n                </Configuration>\n                <Configuration\n                    title={'Configuration 2'}\n                    text={\"Today's New's Source\"}\n                    onEditDrawerOpen={onEditDrawerOpen}\n                    onEditDrawerClose={onEditDrawerClose}\n                >\n                    Nat config 2\n                </Configuration>\n                <NewConfiguration onNewConfigurationModalShow={onNewConfigurationModalShow} />\n            </div>\n            <EditConfiguration onEditDrawerOpen={onEditDrawerOpen} onEditDrawerClose={onEditDrawerClose} />\n            <CreateConfigurationModal\n                isVisibleConfigurationModal={isVisibleConfigurationModal}\n                onNewConfigurationModalShow={onNewConfigurationModalShow}\n                onNewConfigurationModalClose={onNewConfigurationModalClose}\n                onNewConfigurationModalOk={onNewConfigurationModalOk}\n                onNewConfigurationModalCancel={onNewConfigurationModalCancel}\n            />\n        </>\n    );\n};\n\nConfigurations.propTypes = {};\n\nexport default Configurations;\n\n// const [isEditDrawerVisible, setIsEditDrawerVisible] = useState(false);\n// const [isNewConfigurationModalShow, setIsNewConfigurationModalShow] = useState(false);\n//\n// const onEditDrawerOpen = () => {\n//     setIsEditDrawerVisible(true);\n// };\n//\n// const onEditDrawerClose = () => {\n//     setIsEditDrawerVisible(false);\n// };\n//\n// const onNewConfigurationModalShow = () => {\n//     setIsNewConfigurationModalShow(true);\n// };\n//\n// const onNewConfigurationModalClose = () => {\n//     setIsNewConfigurationModalShow(false);\n// };\n//\n// const onNewConfigurationModalOk = () => {\n//     setIsNewConfigurationModalShow(false);\n// };\n//\n// const onNewConfigurationModalCancel = () => {\n//     setIsNewConfigurationModalShow(false);\n// };\n"]},"metadata":{},"sourceType":"module"}