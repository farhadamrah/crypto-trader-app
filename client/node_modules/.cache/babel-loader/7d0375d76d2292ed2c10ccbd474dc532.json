{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Settings\\\\Telegram\\\\Connected\\\\Connected.js\",\n    _s = $RefreshSig$();\n\nimport styles from './Connected.module.scss';\nimport PropTypes from 'prop-types';\nimport Button from '../../../shared/Button/Button';\nimport { BUTTON_TYPES } from '../../../../config/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { disconnectTelegram } from '../../../../redux/actions/users';\nimport { showPasswordConfirmationModal } from '../../../../redux/actions/global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connected = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const {\n    telegramId,\n    telegramUsername\n  } = props;\n\n  const onDisconnectClick = () => {\n    dispatch(showPasswordConfirmationModal(handleTelegramDisconnect));\n  };\n\n  const handleTelegramDisconnect = () => {\n    dispatch(disconnectTelegram(user.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'my-4',\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-gray-700 text-2xl text-center font-medium\",\n      children: \"Telegram notifications is turned on\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-wrap mt-8 text-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-medium mr-5\",\n        children: \"Telegram ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: telegramId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), telegramUsername && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-wrap mt-8 text-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-medium mr-5\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: telegramUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'flex justify-center mt-8',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.disconnectButton,\n        type: BUTTON_TYPES.primary,\n        onClick: onDisconnectClick,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Connected, \"ERMOJPz2/CN1rNPFhRsLNXBEzzQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Connected;\nConnected.propTypes = {};\nexport default Connected;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connected\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Settings/Telegram/Connected/Connected.js"],"names":["styles","PropTypes","Button","BUTTON_TYPES","useDispatch","useSelector","disconnectTelegram","showPasswordConfirmationModal","Connected","props","dispatch","user","state","auth","telegramId","telegramUsername","onDisconnectClick","handleTelegramDisconnect","id","disconnectButton","primary","propTypes"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,6BAAT,QAA8C,kCAA9C;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,IAArB,CAAxB;AAEA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAmCN,KAAzC;;AAEA,QAAMO,iBAAiB,GAAG,MAAM;AAC5BN,IAAAA,QAAQ,CAACH,6BAA6B,CAACU,wBAAD,CAA9B,CAAR;AACH,GAFD;;AAIA,QAAMA,wBAAwB,GAAG,MAAM;AACnCP,IAAAA,QAAQ,CAACJ,kBAAkB,CAACK,IAAI,CAACO,EAAN,CAAnB,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMKC,gBAAgB,iBACb;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR,eAYI;AAAK,MAAA,SAAS,EAAE,0BAAhB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEf,MAAM,CAACmB,gBAA1B;AAA4C,QAAA,IAAI,EAAEhB,YAAY,CAACiB,OAA/D;AAAwE,QAAA,OAAO,EAAEJ,iBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAnCD;;GAAMR,S;UACeJ,W,EAEJC,W;;;KAHXG,S;AAqCNA,SAAS,CAACa,SAAV,GAAsB,EAAtB;AAEA,eAAeb,SAAf","sourcesContent":["import styles from './Connected.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../../../shared/Button/Button';\r\nimport { BUTTON_TYPES } from '../../../../config/constants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { disconnectTelegram } from '../../../../redux/actions/users';\r\nimport { showPasswordConfirmationModal } from '../../../../redux/actions/global';\r\n\r\nconst Connected = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    const { telegramId, telegramUsername } = props;\r\n\r\n    const onDisconnectClick = () => {\r\n        dispatch(showPasswordConfirmationModal(handleTelegramDisconnect));\r\n    };\r\n\r\n    const handleTelegramDisconnect = () => {\r\n        dispatch(disconnectTelegram(user.id));\r\n    };\r\n\r\n    return (\r\n        <div className={'my-4'}>\r\n            <h2 className='text-gray-700 text-2xl text-center font-medium'>Telegram notifications is turned on</h2>\r\n            <div className='flex items-center flex-wrap mt-8 text-lg'>\r\n                <span className='font-medium mr-5'>Telegram ID:</span>\r\n                <span>{telegramId}</span>\r\n            </div>\r\n            {telegramUsername && (\r\n                <div className='flex items-center flex-wrap mt-8 text-lg'>\r\n                    <span className='font-medium mr-5'>Username:</span>\r\n                    <span>{telegramUsername}</span>\r\n                </div>\r\n            )}\r\n            <div className={'flex justify-center mt-8'}>\r\n                <Button className={styles.disconnectButton} type={BUTTON_TYPES.primary} onClick={onDisconnectClick}>\r\n                    Disconnect\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nConnected.propTypes = {};\r\n\r\nexport default Connected;\r\n"]},"metadata":{},"sourceType":"module"}