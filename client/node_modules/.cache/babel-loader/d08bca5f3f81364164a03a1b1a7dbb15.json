{"ast":null,"code":"import { showMessageComponent } from './components';\nimport { MESSAGE_TYPE } from '../../config/constants';\nimport UserService from '../../services/UserService';\nexport const updateUser = userData => async dispatch => {\n  try {\n    const response = await UserService.updateUser(userData);\n    const updatedUser = response.data;\n    return updatedUser;\n  } catch (error) {\n    var _error$response;\n\n    const errorResponseMessage = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.error.message;\n    console.error(errorResponseMessage || error);\n    dispatch(showMessageComponent(MESSAGE_TYPE.error, errorResponseMessage, {\n      destroyAll: true\n    }));\n  }\n};\nexport const deleteUser = userId => async dispatch => {\n  try {\n    const response = await UserService.deleteUser(userId);\n    const deletedUser = response.data;\n    return deletedUser;\n  } catch (error) {\n    var _error$response2;\n\n    const errorResponseMessage = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.error.message;\n    console.error(errorResponseMessage || error);\n    dispatch(showMessageComponent(MESSAGE_TYPE.error, errorResponseMessage, {\n      destroyAll: true\n    }));\n  }\n};","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/redux/actions/users.js"],"names":["showMessageComponent","MESSAGE_TYPE","UserService","updateUser","userData","dispatch","response","updatedUser","data","error","errorResponseMessage","message","console","destroyAll","deleteUser","userId","deletedUser"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,cAArC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAO,MAAMC,UAAU,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AACpD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACC,UAAZ,CAAuBC,QAAvB,CAAvB;AAEA,UAAMG,WAAW,GAAGD,QAAQ,CAACE,IAA7B;AAEA,WAAOD,WAAP;AACH,GAND,CAME,OAAOE,KAAP,EAAc;AAAA;;AACZ,UAAMC,oBAAoB,sBAAGD,KAAK,CAACH,QAAT,oDAAG,gBAAgBE,IAAhB,CAAqBC,KAArB,CAA2BE,OAAxD;AAEAC,IAAAA,OAAO,CAACH,KAAR,CAAcC,oBAAoB,IAAID,KAAtC;AAEAJ,IAAAA,QAAQ,CAACL,oBAAoB,CAACC,YAAY,CAACQ,KAAd,EAAqBC,oBAArB,EAA2C;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAA3C,CAArB,CAAR;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMC,UAAU,GAAGC,MAAM,IAAI,MAAMV,QAAN,IAAkB;AAClD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACY,UAAZ,CAAuBC,MAAvB,CAAvB;AAEA,UAAMC,WAAW,GAAGV,QAAQ,CAACE,IAA7B;AAEA,WAAOQ,WAAP;AACH,GAND,CAME,OAAOP,KAAP,EAAc;AAAA;;AACZ,UAAMC,oBAAoB,uBAAGD,KAAK,CAACH,QAAT,qDAAG,iBAAgBE,IAAhB,CAAqBC,KAArB,CAA2BE,OAAxD;AAEAC,IAAAA,OAAO,CAACH,KAAR,CAAcC,oBAAoB,IAAID,KAAtC;AAEAJ,IAAAA,QAAQ,CAACL,oBAAoB,CAACC,YAAY,CAACQ,KAAd,EAAqBC,oBAArB,EAA2C;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAA3C,CAArB,CAAR;AACH;AACJ,CAdM","sourcesContent":["import { showMessageComponent } from './components';\r\nimport { MESSAGE_TYPE } from '../../config/constants';\r\nimport UserService from '../../services/UserService';\r\n\r\nexport const updateUser = userData => async dispatch => {\r\n    try {\r\n        const response = await UserService.updateUser(userData);\r\n\r\n        const updatedUser = response.data;\r\n\r\n        return updatedUser;\r\n    } catch (error) {\r\n        const errorResponseMessage = error.response?.data.error.message;\r\n\r\n        console.error(errorResponseMessage || error);\r\n\r\n        dispatch(showMessageComponent(MESSAGE_TYPE.error, errorResponseMessage, { destroyAll: true }));\r\n    }\r\n};\r\n\r\nexport const deleteUser = userId => async dispatch => {\r\n    try {\r\n        const response = await UserService.deleteUser(userId);\r\n\r\n        const deletedUser = response.data;\r\n\r\n        return deletedUser;\r\n    } catch (error) {\r\n        const errorResponseMessage = error.response?.data.error.message;\r\n\r\n        console.error(errorResponseMessage || error);\r\n\r\n        dispatch(showMessageComponent(MESSAGE_TYPE.error, errorResponseMessage, { destroyAll: true }));\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}