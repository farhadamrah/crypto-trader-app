{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport * as TYPES from '../types';\nimport { setAuthToken } from '../../utils/auth';\nexport const setUserLoggedIn = user => ({\n  type: TYPES.AUTH_USER_LOGGED_IN,\n  payload: user\n});\nexport const login = userData => async dispatch => {\n  try {\n    const response = await AuthService.login(userData);\n    const user = response.data;\n    dispatch(setUserLoggedIn(user));\n    const {\n      token\n    } = user;\n    setAuthToken(token);\n    return user;\n  } catch (error) {\n    var _error$response;\n\n    console.error((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.error.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/redux/actions/auth.js"],"names":["AuthService","TYPES","setAuthToken","setUserLoggedIn","user","type","AUTH_USER_LOGGED_IN","payload","login","userData","dispatch","response","data","token","error","console","message"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAO,MAAMC,eAAe,GAAGC,IAAI,KAAK;AACpCC,EAAAA,IAAI,EAAEJ,KAAK,CAACK,mBADwB;AAEpCC,EAAAA,OAAO,EAAEH;AAF2B,CAAL,CAA5B;AAKP,OAAO,MAAMI,KAAK,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AAC/C,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACQ,KAAZ,CAAkBC,QAAlB,CAAvB;AAEA,UAAML,IAAI,GAAGO,QAAQ,CAACC,IAAtB;AAEAF,IAAAA,QAAQ,CAACP,eAAe,CAACC,IAAD,CAAhB,CAAR;AAEA,UAAM;AAAES,MAAAA;AAAF,QAAYT,IAAlB;AACAF,IAAAA,YAAY,CAACW,KAAD,CAAZ;AAEA,WAAOT,IAAP;AACH,GAXD,CAWE,OAAOU,KAAP,EAAc;AAAA;;AACZC,IAAAA,OAAO,CAACD,KAAR,oBAAcA,KAAK,CAACH,QAApB,oDAAc,gBAAgBC,IAAhB,CAAqBE,KAArB,CAA2BE,OAAzC;AACH;AACJ,CAfM","sourcesContent":["import AuthService from '../../services/AuthService';\r\nimport * as TYPES from '../types';\r\nimport { setAuthToken } from '../../utils/auth';\r\n\r\nexport const setUserLoggedIn = user => ({\r\n    type: TYPES.AUTH_USER_LOGGED_IN,\r\n    payload: user,\r\n});\r\n\r\nexport const login = userData => async dispatch => {\r\n    try {\r\n        const response = await AuthService.login(userData);\r\n\r\n        const user = response.data;\r\n\r\n        dispatch(setUserLoggedIn(user));\r\n\r\n        const { token } = user;\r\n        setAuthToken(token);\r\n\r\n        return user;\r\n    } catch (error) {\r\n        console.error(error.response?.data.error.message);\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}