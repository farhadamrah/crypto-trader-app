{"ast":null,"code":"import * as TYPES from '../types';\nconst initialState = {\n  isAppLoading: true,\n  isSidebarCollapsed: false\n};\n\nconst global = (state = initialState, action) => {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case TYPES.APP_LOADING_CHANGED:\n      {\n        return { ...state,\n          isAppLoading: payload\n        };\n      }\n\n    case TYPES.SIDEBAR_COLLAPSED_STATE_CHANGED:\n      {\n        return { ...state,\n          isSidebarCollapsed: payload\n        };\n      }\n\n    case TYPES.SIDEBAR_COLLAPSED_STATE_TOGGLED:\n      {\n        return { ...state,\n          isSidebarCollapsed: !state.isSidebarCollapsed\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default global;","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/redux/reducers/global.js"],"names":["TYPES","initialState","isAppLoading","isSidebarCollapsed","global","state","action","payload","type","APP_LOADING_CHANGED","SIDEBAR_COLLAPSED_STATE_CHANGED","SIDEBAR_COLLAPSED_STATE_TOGGLED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,IADG;AAEjBC,EAAAA,kBAAkB,EAAE;AAFH,CAArB;;AAKA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AAEA,UAAQA,MAAM,CAACE,IAAf;AACI,SAAKR,KAAK,CAACS,mBAAX;AAAgC;AAC5B,eAAO,EACH,GAAGJ,KADA;AAEHH,UAAAA,YAAY,EAAEK;AAFX,SAAP;AAIH;;AACD,SAAKP,KAAK,CAACU,+BAAX;AAA4C;AACxC,eAAO,EACH,GAAGL,KADA;AAEHF,UAAAA,kBAAkB,EAAEI;AAFjB,SAAP;AAIH;;AACD,SAAKP,KAAK,CAACW,+BAAX;AAA4C;AACxC,eAAO,EACH,GAAGN,KADA;AAEHF,UAAAA,kBAAkB,EAAE,CAACE,KAAK,CAACF;AAFxB,SAAP;AAIH;;AACD;AACI,aAAOE,KAAP;AApBR;AAsBH,CAzBD;;AA2BA,eAAeD,MAAf","sourcesContent":["import * as TYPES from '../types';\r\n\r\nconst initialState = {\r\n    isAppLoading: true,\r\n    isSidebarCollapsed: false,\r\n};\r\n\r\nconst global = (state = initialState, action) => {\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n        case TYPES.APP_LOADING_CHANGED: {\r\n            return {\r\n                ...state,\r\n                isAppLoading: payload,\r\n            };\r\n        }\r\n        case TYPES.SIDEBAR_COLLAPSED_STATE_CHANGED: {\r\n            return {\r\n                ...state,\r\n                isSidebarCollapsed: payload,\r\n            };\r\n        }\r\n        case TYPES.SIDEBAR_COLLAPSED_STATE_TOGGLED: {\r\n            return {\r\n                ...state,\r\n                isSidebarCollapsed: !state.isSidebarCollapsed,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default global;\r\n"]},"metadata":{},"sourceType":"module"}