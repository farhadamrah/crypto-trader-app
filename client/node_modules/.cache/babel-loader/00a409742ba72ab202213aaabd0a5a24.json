{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\shared\\\\Tooltip\\\\Tooltip.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tooltip = props => {\n  _s();\n\n  const [showTooltip, setShowTooltip] = useState(false);\n  const {\n    text,\n    position,\n    children,\n    className,\n    ...tooltipProps\n  } = props;\n  const TOOLTIP_STYLES = {\n    [TOOLTIP_POSITION.top]: '-translate-x-24 -translate-y-8',\n    [TOOLTIP_POSITION.right]: 'translate-x-2 -translate-y-1',\n    [TOOLTIP_POSITION.bottom]: '-translate-x-24 translate-y-6',\n    [TOOLTIP_POSITION.left]: '-translate-x-56 -translate-y-1'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    onMouseEnter: () => setShowTooltip(!showTooltip),\n    onMouseLeave: () => setShowTooltip(!showTooltip),\n    children: [children, !showTooltip ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `bg-gray-700 text-white py-1 text-center w-32 absolute rounded transform  ${TOOLTIP_STYLES[position]} ${className}`,\n      ...tooltipProps,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tooltip, \"MlKqB7CDspaiqeinDL2ipSY+OVU=\");\n\n_c = Tooltip;\nTooltip.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired\n};\nexport default Tooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/shared/Tooltip/Tooltip.js"],"names":["useState","PropTypes","TOOLTIP_POSITION","Tooltip","props","showTooltip","setShowTooltip","text","position","children","className","tooltipProps","TOOLTIP_STYLES","top","right","bottom","left","propTypes","string","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,SAA5B;AAAuC,OAAGC;AAA1C,MAA2DP,KAAjE;AAEA,QAAMQ,cAAc,GAAG;AACnB,KAACV,gBAAgB,CAACW,GAAlB,GAAwB,gCADL;AAEnB,KAACX,gBAAgB,CAACY,KAAlB,GAA0B,8BAFP;AAGnB,KAACZ,gBAAgB,CAACa,MAAlB,GAA2B,+BAHR;AAInB,KAACb,gBAAgB,CAACc,IAAlB,GAAyB;AAJN,GAAvB;AAOA,sBACI;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,YAAY,EAAE,MAAMV,cAAc,CAAC,CAACD,WAAF,CAFtC;AAGI,IAAA,YAAY,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAHtC;AAAA,eAKKI,QALL,EAOK,CAACJ,WAAD,gBACG;AACI,MAAA,SAAS,EAAG,4EAA2EO,cAAc,CAACJ,QAAD,CAAW,IAAGE,SAAU,EADjI;AAAA,SAEQC,YAFR;AAAA,gBAIKJ;AAJL;AAAA;AAAA;AAAA;AAAA,YADH,GAOG,IAdR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9BD;;GAAMJ,O;;KAAAA,O;AAgCNA,OAAO,CAACc,SAAR,GAAoB;AAChBP,EAAAA,SAAS,EAAET,SAAS,CAACiB,MADL;AAEhBX,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UAFP;AAGhBX,EAAAA,QAAQ,EAAEP,SAAS,CAACiB,MAAV,CAAiBC;AAHX,CAApB;AAMA,eAAehB,OAAf","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\n\nconst Tooltip = props => {\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    const { text, position, children, className, ...tooltipProps } = props;\n\n    const TOOLTIP_STYLES = {\n        [TOOLTIP_POSITION.top]: '-translate-x-24 -translate-y-8',\n        [TOOLTIP_POSITION.right]: 'translate-x-2 -translate-y-1',\n        [TOOLTIP_POSITION.bottom]: '-translate-x-24 translate-y-6',\n        [TOOLTIP_POSITION.left]: '-translate-x-56 -translate-y-1',\n    };\n\n    return (\n        <div\n            className='relative'\n            onMouseEnter={() => setShowTooltip(!showTooltip)}\n            onMouseLeave={() => setShowTooltip(!showTooltip)}\n        >\n            {children}\n\n            {!showTooltip ? (\n                <span\n                    className={`bg-gray-700 text-white py-1 text-center w-32 absolute rounded transform  ${TOOLTIP_STYLES[position]} ${className}`}\n                    {...tooltipProps}\n                >\n                    {text}\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nTooltip.propTypes = {\n    className: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}