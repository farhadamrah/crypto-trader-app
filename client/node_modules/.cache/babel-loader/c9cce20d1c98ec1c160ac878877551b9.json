{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\global\\\\PasswordConfirmationModal\\\\PasswordConfirmationModal.js\",\n    _s = $RefreshSig$();\n\nimport Modal from '../../shared/Modal/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hidePasswordConfirmationModal } from '../../../redux/actions/global';\nimport { useForm } from 'react-hook-form';\nimport FormItem from '../../shared/Form/FormItem/FormItem';\nimport Input from '../../shared/Input/Input';\nimport { generateConfirmationToken } from '../../../redux/actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordConfirmationModal = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const modalProps = useSelector(state => state.global.passwordConfirmationModalProps);\n  const {\n    register: registerFormField,\n    handleSubmit,\n    reset,\n    formState: {\n      isDirty: hasUnsavedChanged\n    }\n  } = useForm({});\n  const {\n    isVisible,\n    successCallback\n  } = modalProps;\n\n  const onClose = () => {\n    dispatch(hidePasswordConfirmationModal());\n    resetForm();\n  };\n\n  const onOk = () => {\n    handleSubmit(async values => {\n      const token = await dispatch(generateConfirmationToken(values.password));\n\n      if (token) {\n        if (successCallback) {\n          successCallback();\n        }\n\n        dispatch(hidePasswordConfirmationModal());\n        resetForm();\n      }\n    })();\n  };\n\n  const resetForm = () => {\n    reset({\n      password: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isVisible: isVisible,\n    onClose: onClose,\n    onOk: onOk,\n    title: 'Confirm Password',\n    buttonProps: {\n      okText: 'Confirm'\n    },\n    showClose: true,\n    showFooter: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 py-7 border-b border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(FormItem, {\n        label: 'Password',\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: 'Password',\n          ...registerFormField('password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PasswordConfirmationModal, \"1125D8YaCxhQfyMo+H8Kens0b+g=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = PasswordConfirmationModal;\nexport default PasswordConfirmationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordConfirmationModal\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/global/PasswordConfirmationModal/PasswordConfirmationModal.js"],"names":["Modal","useDispatch","useSelector","hidePasswordConfirmationModal","useForm","FormItem","Input","generateConfirmationToken","PasswordConfirmationModal","dispatch","modalProps","state","global","passwordConfirmationModalProps","register","registerFormField","handleSubmit","reset","formState","isDirty","hasUnsavedChanged","isVisible","successCallback","onClose","resetForm","onOk","values","token","password","okText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,6BAAT,QAA8C,+BAA9C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,yBAAT,QAA0C,6BAA1C;;;AAEA,MAAMC,yBAAyB,GAAG,MAAM;AAAA;;AACpC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,UAAU,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,8BAAvB,CAA9B;AAEA,QAAM;AACFC,IAAAA,QAAQ,EAAEC,iBADR;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAEC;AAAX;AAJT,MAKFhB,OAAO,CAAC,EAAD,CALX;AAOA,QAAM;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCZ,UAAvC;;AAEA,QAAMa,OAAO,GAAG,MAAM;AAClBd,IAAAA,QAAQ,CAACN,6BAA6B,EAA9B,CAAR;AACAqB,IAAAA,SAAS;AACZ,GAHD;;AAKA,QAAMC,IAAI,GAAG,MAAM;AACfT,IAAAA,YAAY,CAAC,MAAMU,MAAN,IAAgB;AACzB,YAAMC,KAAK,GAAG,MAAMlB,QAAQ,CAACF,yBAAyB,CAACmB,MAAM,CAACE,QAAR,CAA1B,CAA5B;;AAEA,UAAID,KAAJ,EAAW;AACP,YAAIL,eAAJ,EAAqB;AACjBA,UAAAA,eAAe;AAClB;;AAEDb,QAAAA,QAAQ,CAACN,6BAA6B,EAA9B,CAAR;AACAqB,QAAAA,SAAS;AACZ;AACJ,KAXW,CAAZ;AAYH,GAbD;;AAeA,QAAMA,SAAS,GAAG,MAAM;AACpBP,IAAAA,KAAK,CAAC;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAL;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD;AACI,IAAA,SAAS,EAAEP,SADf;AAEI,IAAA,OAAO,EAAEE,OAFb;AAGI,IAAA,IAAI,EAAEE,IAHV;AAII,IAAA,KAAK,EAAE,kBAJX;AAKI,IAAA,WAAW,EAAE;AACTI,MAAAA,MAAM,EAAE;AADC,KALjB;AAQI,IAAA,SAAS,MARb;AASI,IAAA,UAAU,MATd;AAAA,2BAWI;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,UAAjB;AAAA,+BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAE,UAA7B;AAAA,aAA6Cd,iBAAiB,CAAC,UAAD;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAzDD;;GAAMP,yB;UACeP,W,EAEEC,W,EAOfE,O;;;KAVFI,yB;AA2DN,eAAeA,yBAAf","sourcesContent":["import Modal from '../../shared/Modal/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { hidePasswordConfirmationModal } from '../../../redux/actions/global';\r\nimport { useForm } from 'react-hook-form';\r\nimport FormItem from '../../shared/Form/FormItem/FormItem';\r\nimport Input from '../../shared/Input/Input';\r\nimport { generateConfirmationToken } from '../../../redux/actions/auth';\r\n\r\nconst PasswordConfirmationModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const modalProps = useSelector(state => state.global.passwordConfirmationModalProps);\r\n\r\n    const {\r\n        register: registerFormField,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { isDirty: hasUnsavedChanged },\r\n    } = useForm({});\r\n\r\n    const { isVisible, successCallback } = modalProps;\r\n\r\n    const onClose = () => {\r\n        dispatch(hidePasswordConfirmationModal());\r\n        resetForm();\r\n    };\r\n\r\n    const onOk = () => {\r\n        handleSubmit(async values => {\r\n            const token = await dispatch(generateConfirmationToken(values.password));\r\n\r\n            if (token) {\r\n                if (successCallback) {\r\n                    successCallback();\r\n                }\r\n\r\n                dispatch(hidePasswordConfirmationModal());\r\n                resetForm();\r\n            }\r\n        })();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        reset({ password: '' });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isVisible={isVisible}\r\n            onClose={onClose}\r\n            onOk={onOk}\r\n            title={'Confirm Password'}\r\n            buttonProps={{\r\n                okText: 'Confirm',\r\n            }}\r\n            showClose\r\n            showFooter\r\n        >\r\n            <div className='px-5 py-7 border-b border-t border-gray-200'>\r\n                <FormItem label={'Password'}>\r\n                    <Input.Password placeholder={'Password'} {...registerFormField('password')} />\r\n                </FormItem>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default PasswordConfirmationModal;\r\n"]},"metadata":{},"sourceType":"module"}