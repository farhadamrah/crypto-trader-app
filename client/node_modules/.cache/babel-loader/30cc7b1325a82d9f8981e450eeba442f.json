{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Configurations\\\\Configuration\\\\Configuration.js\",\n    _s = $RefreshSig$();\n\nimport styles from './Configuration.module.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport Tag from '../../shared/Tag/Tag';\nimport Button from '../../shared/Button/Button';\nimport { BUTTON_TYPES } from '../../../config/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser, updateUserConfiguration } from '../../../redux/actions/users';\nimport { showActionConfirmationModal } from '../../../redux/actions/global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Configuration = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const {\n    isEditable,\n    editConfiguration,\n    ...configuration\n  } = props;\n  const {\n    name,\n    is_spot_enabled,\n    is_futures_enabled\n  } = configuration;\n  const {\n    active_configuration\n  } = user;\n  const isActive = configuration.id === active_configuration;\n\n  const onEditClick = () => {\n    editConfiguration(configuration);\n  };\n\n  const onStatusChangeClick = () => {\n    dispatch(showActionConfirmationModal({\n      okCallback: updateConfigurationActivationStatus,\n      title: `Confirm ${isActive ? 'deactivation' : 'activation'}`\n    }));\n  };\n\n  const updateConfigurationActivationStatus = () => {\n    dispatch(updateUserConfiguration({\n      id: user.id,\n      active_configuration: isActive ? null : configuration.id\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.configuration,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-lg font-medium\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr-5\",\n            onClick: onEditClick,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: 'pencil-alt',\n              className: \"fa-xs text-gray-300 cursor-pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: 'dot-circle',\n              className: classNames({\n                'text-green-500': isActive,\n                'text-gray-300': !isActive\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm mt-8 mb-4\",\n        children: [is_spot_enabled && /*#__PURE__*/_jsxDEV(Tag, {\n          className: 'mr-2',\n          color: 'green',\n          children: \"Spot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), is_futures_enabled && /*#__PURE__*/_jsxDEV(Tag, {\n          color: 'red',\n          children: \"Futures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex justify-end',\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classNames({\n            [styles.activateButton]: !isActive,\n            [styles.deactivateButton]: isActive\n          }),\n          type: BUTTON_TYPES.primary,\n          onClick: onStatusChangeClick,\n          children: isActive ? 'Deactivate' : 'Activate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Configuration, \"ERMOJPz2/CN1rNPFhRsLNXBEzzQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Configuration;\nConfiguration.propTypes = {\n  title: PropTypes.string,\n  text: PropTypes.string\n};\nexport default Configuration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Configurations/Configuration/Configuration.js"],"names":["styles","PropTypes","FontAwesomeIcon","classNames","Tag","Button","BUTTON_TYPES","useDispatch","useSelector","updateUser","updateUserConfiguration","showActionConfirmationModal","Configuration","props","dispatch","user","state","auth","isEditable","editConfiguration","configuration","name","is_spot_enabled","is_futures_enabled","active_configuration","isActive","id","onEditClick","onStatusChangeClick","okCallback","updateConfigurationActivationStatus","title","activateButton","deactivateButton","primary","propTypes","string","text"],"mappings":"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","sourcesContent":["import styles from './Configuration.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classNames from 'classnames';\r\nimport Tag from '../../shared/Tag/Tag';\r\nimport Button from '../../shared/Button/Button';\r\nimport { BUTTON_TYPES } from '../../../config/constants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUser, updateUserConfiguration } from '../../../redux/actions/users';\r\nimport { showActionConfirmationModal } from '../../../redux/actions/global';\r\n\r\nconst Configuration = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    const { isEditable, editConfiguration, ...configuration } = props;\r\n\r\n    const { name, is_spot_enabled, is_futures_enabled } = configuration;\r\n\r\n    const { active_configuration } = user;\r\n\r\n    const isActive = configuration.id === active_configuration;\r\n\r\n    const onEditClick = () => {\r\n        editConfiguration(configuration);\r\n    };\r\n\r\n    const onStatusChangeClick = () => {\r\n        dispatch(\r\n            showActionConfirmationModal({\r\n                okCallback: updateConfigurationActivationStatus,\r\n                title: `Confirm ${isActive ? 'deactivation' : 'activation'}`,\r\n            })\r\n        );\r\n    };\r\n\r\n    const updateConfigurationActivationStatus = () => {\r\n        dispatch(updateUserConfiguration({ id: user.id, active_configuration: isActive ? null : configuration.id }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.configuration}>\r\n                <div className='flex justify-between'>\r\n                    <h1 className='text-lg font-medium'>{name}</h1>\r\n                    <div className='flex'>\r\n                        {isEditable && (\r\n                            <div className='mr-5' onClick={onEditClick}>\r\n                                <FontAwesomeIcon icon={'pencil-alt'} className='fa-xs text-gray-300 cursor-pointer' />\r\n                            </div>\r\n                        )}\r\n                        <div>\r\n                            <FontAwesomeIcon\r\n                                icon={'dot-circle'}\r\n                                className={classNames({\r\n                                    'text-green-500': isActive,\r\n                                    'text-gray-300': !isActive,\r\n                                })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*<span className='text-sm text-gray-400 mb-3'>Description</span>*/}\r\n                <div className='text-sm mt-8 mb-4'>\r\n                    {is_spot_enabled && (\r\n                        <Tag className={'mr-2'} color={'green'}>\r\n                            Spot\r\n                        </Tag>\r\n                    )}\r\n                    {is_futures_enabled && <Tag color={'red'}>Futures</Tag>}\r\n                </div>\r\n                <div className={'flex justify-end'}>\r\n                    <Button\r\n                        className={classNames({\r\n                            [styles.activateButton]: !isActive,\r\n                            [styles.deactivateButton]: isActive,\r\n                        })}\r\n                        type={BUTTON_TYPES.primary}\r\n                        onClick={onStatusChangeClick}\r\n                    >\r\n                        {isActive ? 'Deactivate' : 'Activate'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nConfiguration.propTypes = {\r\n    title: PropTypes.string,\r\n    text: PropTypes.string,\r\n};\r\n\r\nexport default Configuration;\r\n"]},"metadata":{},"sourceType":"module"}