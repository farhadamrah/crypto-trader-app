{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Routes\\\\Routes.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, useLocation } from 'react-router-dom';\nimport { isPrivateRoute } from '../../utils/route';\nconst PrivateRoutes = /*#__PURE__*/React.lazy(_c = () => import('./PrivateRoutes'));\n_c2 = PrivateRoutes;\nimport PublicRoutes from './PublicRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routes = props => {\n  _s();\n\n  let location = useLocation();\n  return isPrivateRoute(location.pathname) ? /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 29\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(PrivateRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(PublicRoutes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Routes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c3 = Routes;\nRoutes.propTypes = {};\nexport default Routes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrivateRoutes$React.lazy\");\n$RefreshReg$(_c2, \"PrivateRoutes\");\n$RefreshReg$(_c3, \"Routes\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Routes/Routes.js"],"names":["PropTypes","React","Route","useLocation","isPrivateRoute","PrivateRoutes","lazy","PublicRoutes","Routes","props","location","pathname","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,IAAN,MAAW,MAAM,OAAO,iBAAP,CAAjB,CAAtB;MAAMD,a;AACN,OAAOE,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,MAAIC,QAAQ,GAAGP,WAAW,EAA1B;AAEA,SAAOC,cAAc,CAACM,QAAQ,CAACC,QAAV,CAAd,gBACH,QAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA,2BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADG,gBAKH,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UALJ;AAOH,CAVD;;GAAMH,M;UACaL,W;;;MADbK,M;AAYNA,MAAM,CAACI,SAAP,GAAmB,EAAnB;AAEA,eAAeJ,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, useLocation } from 'react-router-dom';\nimport { isPrivateRoute } from '../../utils/route';\nconst PrivateRoutes = React.lazy(() => import('./PrivateRoutes'));\nimport PublicRoutes from './PublicRoutes';\n\nconst Routes = props => {\n    let location = useLocation();\n\n    return isPrivateRoute(location.pathname) ? (\n        <Suspense fallback={<div>Loading...</div>}>\n            <PrivateRoutes />\n        </Suspense>\n    ) : (\n        <PublicRoutes />\n    );\n};\n\nRoutes.propTypes = {};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}