{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\shared\\\\Tooltip\\\\Tooltip.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOOLTIP_STYLES = {\n  [TOOLTIP_POSITION.top]: '-translate-x-24 -translate-y-8',\n  [TOOLTIP_POSITION.right]: 'translate-x-2 -translate-y-1',\n  [TOOLTIP_POSITION.bottom]: '-translate-x-24 translate-y-6',\n  [TOOLTIP_POSITION.left]: '-translate-x-56 -translate-y-1'\n};\n\nconst Tooltip = props => {\n  _s();\n\n  const [showTooltip, setShowTooltip] = useState(false);\n  const {\n    text,\n    position,\n    children,\n    className,\n    ...tooltipProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseEnter: () => setShowTooltip(!showTooltip),\n    onMouseLeave: () => setShowTooltip(!showTooltip),\n    children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `bg-gray-700 text-white py-1 text-center w-36 absolute rounded transform transition-all duration-300 ease-in-out ${!showTooltip ? 'opacity-0 invisible' : ''}  ${TOOLTIP_STYLES[position]} ${className}`,\n      ...tooltipProps,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tooltip, \"MlKqB7CDspaiqeinDL2ipSY+OVU=\");\n\n_c = Tooltip;\nTooltip.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired\n};\nexport default Tooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/shared/Tooltip/Tooltip.js"],"names":["useState","PropTypes","TOOLTIP_POSITION","TOOLTIP_STYLES","top","right","bottom","left","Tooltip","props","showTooltip","setShowTooltip","text","position","children","className","tooltipProps","propTypes","string","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,cAAc,GAAG;AACnB,GAACD,gBAAgB,CAACE,GAAlB,GAAwB,gCADL;AAEnB,GAACF,gBAAgB,CAACG,KAAlB,GAA0B,8BAFP;AAGnB,GAACH,gBAAgB,CAACI,MAAlB,GAA2B,+BAHR;AAInB,GAACJ,gBAAgB,CAACK,IAAlB,GAAyB;AAJN,CAAvB;;AAOA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,SAA5B;AAAuC,OAAGC;AAA1C,MAA2DP,KAAjE;AAEA,sBACI;AAAK,IAAA,YAAY,EAAE,MAAME,cAAc,CAAC,CAACD,WAAF,CAAvC;AAAuD,IAAA,YAAY,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAAzF;AAAA,eACKI,QADL,eAEI;AACI,MAAA,SAAS,EAAG,mHACR,CAACJ,WAAD,GAAe,qBAAf,GAAuC,EAC1C,KAAIP,cAAc,CAACU,QAAD,CAAW,IAAGE,SAAU,EAH/C;AAAA,SAIQC,YAJR;AAAA,gBAMKJ;AANL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlBD;;GAAMJ,O;;KAAAA,O;AAoBNA,OAAO,CAACS,SAAR,GAAoB;AAChBF,EAAAA,SAAS,EAAEd,SAAS,CAACiB,MADL;AAEhBN,EAAAA,IAAI,EAAEX,SAAS,CAACiB,MAAV,CAAiBC,UAFP;AAGhBN,EAAAA,QAAQ,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC;AAHX,CAApB;AAMA,eAAeX,OAAf","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\n\nconst TOOLTIP_STYLES = {\n    [TOOLTIP_POSITION.top]: '-translate-x-24 -translate-y-8',\n    [TOOLTIP_POSITION.right]: 'translate-x-2 -translate-y-1',\n    [TOOLTIP_POSITION.bottom]: '-translate-x-24 translate-y-6',\n    [TOOLTIP_POSITION.left]: '-translate-x-56 -translate-y-1',\n};\n\nconst Tooltip = props => {\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    const { text, position, children, className, ...tooltipProps } = props;\n\n    return (\n        <div onMouseEnter={() => setShowTooltip(!showTooltip)} onMouseLeave={() => setShowTooltip(!showTooltip)}>\n            {children}\n            <span\n                className={`bg-gray-700 text-white py-1 text-center w-36 absolute rounded transform transition-all duration-300 ease-in-out ${\n                    !showTooltip ? 'opacity-0 invisible' : ''\n                }  ${TOOLTIP_STYLES[position]} ${className}`}\n                {...tooltipProps}\n            >\n                {text}\n            </span>\n        </div>\n    );\n};\n\nTooltip.propTypes = {\n    className: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}