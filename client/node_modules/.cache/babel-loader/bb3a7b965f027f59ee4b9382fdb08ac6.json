{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\shared\\\\Modal\\\\Modal.js\";\n// import PropTypes from 'prop-types';\n//\n// const Modal = props => {\n//     const { isShowModal, setIsShowModal, children, className, ...modalProps } = props;\n//\n//     return (\n//         <div\n//             className={`w-full h-full fixed top-0 left-0 flex justify-center items-center transition-all duration-700 ease-in-out ${\n//                 isShowModal ? 'hidden' : ''\n//             } `}\n//             {...modalProps}\n//         >\n//             <div\n//                 className='w-full h-full absolute top-0 left-0 z-40 bg-black opacity-60 transition-all duration-700 ease-in-out'\n//                 onClick={() => setIsShowModal(!isShowModal)}\n//             />\n//             <div\n//                 className={`bg-white rounded shadow p-8 z-50 transform transition-transform duration-300 delay-300 ${className}  ${\n//                     !isShowModal ? 'scale-100' : 'scale-50'\n//                 }`}\n//             >\n//                 {children}\n//             </div>\n//         </div>\n//     );\n// };\n//\n// Modal.propTypes = {};\n//\n// export default Modal;\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  const {\n    isShowModal,\n    setIsShowModal,\n    children,\n    className,\n    ...modalProps\n  } = props; // let [isOpen, setIsOpen] = useState(true);\n  // function closeModal() {\n  //     setIsOpen(false);\n  // }\n  //\n  // function openModal() {\n  //     setIsOpen(true);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Transition, {\n      appear: true,\n      show: isShowModal,\n      as: Fragment,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        as: \"div\",\n        className: \"fixed inset-0 overflow-y-auto\",\n        onClose: () => setIsShowModal(!isShowModal),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-h-screen fixed top-20 left-20 px-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Transition.Child, {\n            as: Fragment,\n            enter: \"ease-out duration-300\",\n            enterFrom: \"opacity-0\",\n            enterTo: \"opacity-100\",\n            leave: \"ease-in duration-200\",\n            leaveFrom: \"opacity-100\",\n            leaveTo: \"opacity-0\",\n            children: /*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n              className: \"fixed inset-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block h-screen align-middle\",\n            \"aria-hidden\": \"true\",\n            children: \"\\u200B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Transition.Child, {\n            as: Fragment,\n            enter: \"ease-out duration-300\",\n            enterFrom: \"opacity-0 scale-95\",\n            enterTo: \"opacity-100 scale-100\",\n            leave: \"ease-in duration-200\",\n            leaveFrom: \"opacity-100 scale-100\",\n            leaveTo: \"opacity-0 scale-95\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", children]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/shared/Modal/Modal.js"],"names":["Dialog","Transition","Fragment","Modal","props","isShowModal","setIsShowModal","children","className","modalProps"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,SAAzC;AAAoD,OAAGC;AAAvD,MAAsEL,KAA5E,CADmB,CAEnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,IAAI,EAAEC,WAAzB;AAAsC,MAAA,EAAE,EAAEH,QAA1C;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,SAAS,EAAC,+BAA3B;AAA2D,QAAA,OAAO,EAAE,MAAMI,cAAc,CAAC,CAACD,WAAF,CAAxF;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oDAAf;AAAA,kCACI,QAAC,UAAD,CAAY,KAAZ;AACI,YAAA,EAAE,EAAEH,QADR;AAEI,YAAA,KAAK,EAAC,uBAFV;AAGI,YAAA,SAAS,EAAC,WAHd;AAII,YAAA,OAAO,EAAC,aAJZ;AAKI,YAAA,KAAK,EAAC,sBALV;AAMI,YAAA,SAAS,EAAC,aANd;AAOI,YAAA,OAAO,EAAC,WAPZ;AAAA,mCASI,QAAC,MAAD,CAAQ,OAAR;AAAgB,cAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAM,YAAA,SAAS,EAAC,oCAAhB;AAAqD,2BAAY,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAiBI,QAAC,UAAD,CAAY,KAAZ;AACI,YAAA,EAAE,EAAEA,QADR;AAEI,YAAA,KAAK,EAAC,uBAFV;AAGI,YAAA,SAAS,EAAC,oBAHd;AAII,YAAA,OAAO,EAAC,uBAJZ;AAKI,YAAA,KAAK,EAAC,sBALV;AAMI,YAAA,SAAS,EAAC,uBANd;AAOI,YAAA,OAAO,EAAC,oBAPZ;AAAA,mCASI;AAAA,8BAAOK,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqCH,CAjDD;;KAAMJ,K;AAmDN,eAAeA,KAAf","sourcesContent":["// import PropTypes from 'prop-types';\n//\n// const Modal = props => {\n//     const { isShowModal, setIsShowModal, children, className, ...modalProps } = props;\n//\n//     return (\n//         <div\n//             className={`w-full h-full fixed top-0 left-0 flex justify-center items-center transition-all duration-700 ease-in-out ${\n//                 isShowModal ? 'hidden' : ''\n//             } `}\n//             {...modalProps}\n//         >\n//             <div\n//                 className='w-full h-full absolute top-0 left-0 z-40 bg-black opacity-60 transition-all duration-700 ease-in-out'\n//                 onClick={() => setIsShowModal(!isShowModal)}\n//             />\n//             <div\n//                 className={`bg-white rounded shadow p-8 z-50 transform transition-transform duration-300 delay-300 ${className}  ${\n//                     !isShowModal ? 'scale-100' : 'scale-50'\n//                 }`}\n//             >\n//                 {children}\n//             </div>\n//         </div>\n//     );\n// };\n//\n// Modal.propTypes = {};\n//\n// export default Modal;\n\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment } from 'react';\n\nconst Modal = props => {\n    const { isShowModal, setIsShowModal, children, className, ...modalProps } = props;\n    // let [isOpen, setIsOpen] = useState(true);\n\n    // function closeModal() {\n    //     setIsOpen(false);\n    // }\n    //\n    // function openModal() {\n    //     setIsOpen(true);\n    // }\n\n    return (\n        <>\n            <Transition appear show={isShowModal} as={Fragment}>\n                <Dialog as='div' className='fixed inset-0 overflow-y-auto' onClose={() => setIsShowModal(!isShowModal)}>\n                    <div className='min-h-screen fixed top-20 left-20 px-4 text-center'>\n                        <Transition.Child\n                            as={Fragment}\n                            enter='ease-out duration-300'\n                            enterFrom='opacity-0'\n                            enterTo='opacity-100'\n                            leave='ease-in duration-200'\n                            leaveFrom='opacity-100'\n                            leaveTo='opacity-0'\n                        >\n                            <Dialog.Overlay className='fixed inset-0' />\n                        </Transition.Child>\n\n                        {/* This element is to trick the browser into centering the modal contents. */}\n                        <span className='inline-block h-screen align-middle' aria-hidden='true'>\n                            &#8203;\n                        </span>\n                        <Transition.Child\n                            as={Fragment}\n                            enter='ease-out duration-300'\n                            enterFrom='opacity-0 scale-95'\n                            enterTo='opacity-100 scale-100'\n                            leave='ease-in duration-200'\n                            leaveFrom='opacity-100 scale-100'\n                            leaveTo='opacity-0 scale-95'\n                        >\n                            <div> {children}</div>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition>\n        </>\n    );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}