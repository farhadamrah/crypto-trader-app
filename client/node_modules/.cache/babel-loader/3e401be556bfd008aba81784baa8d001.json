{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Settings\\\\Telegram\\\\Telegram.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from '../../shared/Button/Button';\nimport classNames from 'classnames';\nimport Steps from './Steps/Steps';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Connected from './Connected/Connected';\nimport { connectTelegram } from '../../../redux/actions/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STEPS = {\n  startBot: 1,\n  copyId: 2,\n  enterId: 3\n};\n\nconst Telegram = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const [currentStep, setCurrentStep] = useState(STEPS.startBot);\n  const [telegramId, setTelegramId] = useState('');\n\n  const onNextStepClick = async () => {\n    if (currentStep === STEPS.enterId) {\n      const updatedUser = await dispatch(connectTelegram({\n        telegram_id: telegramId,\n        id: user.id\n      }));\n\n      if (updatedUser) {\n        setCurrentStep(STEPS.startBot);\n        setTelegramId('');\n      }\n    } else {\n      setCurrentStep(step => step + 1);\n    }\n  };\n\n  const onPreviousStepClick = () => {\n    setCurrentStep(step => step - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl text-gray-800 font-medium pb-6 mb-10 border-b border-gray-300\",\n      children: \"Telegram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-5 rounded-md shadow flex flex-col justify-between\",\n      children: user.telegram_id ? /*#__PURE__*/_jsxDEV(Connected, {\n        telegramId: user.telegram_id,\n        telegramUsername: user.telegram_username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 xl:flex items-center justify-between rounded-md p-3 mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center cursor-pointer\",\n              onClick: () => setCurrentStep(STEPS.startBot),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames('rounded-full shadow w-8 h-8 font-semibold mr-2 flex justify-center items-center cursor-pointer', {\n                  'bg-indigo-600 text-white': currentStep === STEPS.startBot,\n                  'bg-green-400 text-white': currentStep > STEPS.startBot\n                }),\n                children: STEPS.startBot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames('cursor-pointer', {\n                  'text-indigo-700': currentStep === STEPS.startBot,\n                  'text-green-500': currentStep > STEPS.startBot\n                }),\n                children: \"Start bot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: currentStep > STEPS.startBot ? 'grip-lines' : 'ellipsis-h',\n              className: classNames('text-gray-400 transform rotate-90 xl:rotate-0 ml-2 xl:ml-0', {\n                'text-green-500': currentStep > STEPS.startBot\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center cursor-pointer\",\n              onClick: () => setCurrentStep(STEPS.copyId),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames('rounded-full shadow w-8 h-8 font-semibold mr-2 flex justify-center items-center cursor-pointer', {\n                  'bg-white text-indigo-600': currentStep < STEPS.copyId,\n                  'bg-indigo-600 text-white': currentStep === STEPS.copyId,\n                  'bg-green-400 text-white': currentStep > STEPS.copyId\n                }),\n                children: STEPS.copyId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames('cursor-pointer', {\n                  'text-indigo-700': currentStep === STEPS.copyId,\n                  'text-green-500': currentStep > STEPS.copyId\n                }),\n                children: \"Copy Telegram ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: currentStep > STEPS.copyId ? 'grip-lines' : 'ellipsis-h',\n              className: classNames('text-gray-400 transform rotate-90 xl:rotate-0 ml-2 xl:ml-0', {\n                'text-green-500': currentStep > STEPS.copyId\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center cursor-pointer\",\n              onClick: () => setCurrentStep(STEPS.enterId),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames('rounded-full shadow w-8 h-8 font-semibold mr-2 flex justify-center items-center cursor-pointer', {\n                  'bg-indigo-600 text-white': currentStep === STEPS.enterId,\n                  'bg-white text-indigo-600': currentStep < STEPS.enterId\n                }),\n                children: STEPS.enterId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames('cursor-pointer', {\n                  'text-indigo-700': currentStep === STEPS.enterId,\n                  'text-green-500': currentStep > STEPS.enterId\n                }),\n                children: \"Enter Telegram ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Steps, {\n            steps: STEPS,\n            currentStep: currentStep,\n            telegramId: telegramId,\n            setTelegramId: setTelegramId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-center items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: 'bg-indigo-600 hover:bg-indigo-700',\n            type: 'primary',\n            onClick: onNextStepClick,\n            children: currentStep === STEPS.enterId ? 'Connect' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classNames('mt-3', {\n              invisible: currentStep === STEPS.startBot\n            }),\n            type: 'link',\n            onClick: onPreviousStepClick,\n            children: \"Go back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Telegram, \"6XfVk6yOXK9Duut7yO+O6VWkLRU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Telegram;\nTelegram.propTypes = {};\nexport default Telegram;\n\nvar _c;\n\n$RefreshReg$(_c, \"Telegram\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Settings/Telegram/Telegram.js"],"names":["PropTypes","useState","FontAwesomeIcon","Button","classNames","Steps","useDispatch","useSelector","Connected","connectTelegram","STEPS","startBot","copyId","enterId","Telegram","props","dispatch","user","state","auth","currentStep","setCurrentStep","telegramId","setTelegramId","onNextStepClick","updatedUser","telegram_id","id","step","onPreviousStepClick","telegram_username","invisible","propTypes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from '../../shared/Button/Button';\r\nimport classNames from 'classnames';\r\nimport Steps from './Steps/Steps';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Connected from './Connected/Connected';\r\nimport { connectTelegram } from '../../../redux/actions/users';\r\n\r\nconst STEPS = {\r\n    startBot: 1,\r\n    copyId: 2,\r\n    enterId: 3,\r\n};\r\n\r\nconst Telegram = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    const [currentStep, setCurrentStep] = useState(STEPS.startBot);\r\n    const [telegramId, setTelegramId] = useState('');\r\n\r\n    const onNextStepClick = async () => {\r\n        if (currentStep === STEPS.enterId) {\r\n            const updatedUser = await dispatch(connectTelegram({ telegram_id: telegramId, id: user.id }));\r\n\r\n            if (updatedUser) {\r\n                setCurrentStep(STEPS.startBot);\r\n                setTelegramId('');\r\n            }\r\n        } else {\r\n            setCurrentStep(step => step + 1);\r\n        }\r\n    };\r\n\r\n    const onPreviousStepClick = () => {\r\n        setCurrentStep(step => step - 1);\r\n    };\r\n\r\n    return (\r\n        <div className='h-full flex flex-col'>\r\n            <h1 className='text-2xl text-gray-800 font-medium pb-6 mb-10 border-b border-gray-300'>Telegram</h1>\r\n            <div className='bg-white p-5 rounded-md shadow flex flex-col justify-between'>\r\n                {user.telegram_id ? (\r\n                    <Connected telegramId={user.telegram_id} telegramUsername={user.telegram_username} />\r\n                ) : (\r\n                    <>\r\n                        <div>\r\n                            <div className='bg-gray-100 xl:flex items-center justify-between rounded-md p-3 mb-5'>\r\n                                <div\r\n                                    className='flex items-center cursor-pointer'\r\n                                    onClick={() => setCurrentStep(STEPS.startBot)}\r\n                                >\r\n                                    <span\r\n                                        className={classNames(\r\n                                            'rounded-full shadow w-8 h-8 font-semibold mr-2 flex justify-center items-center cursor-pointer',\r\n                                            {\r\n                                                'bg-indigo-600 text-white': currentStep === STEPS.startBot,\r\n                                                'bg-green-400 text-white': currentStep > STEPS.startBot,\r\n                                            }\r\n                                        )}\r\n                                    >\r\n                                        {STEPS.startBot}\r\n                                    </span>\r\n                                    <span\r\n                                        className={classNames('cursor-pointer', {\r\n                                            'text-indigo-700': currentStep === STEPS.startBot,\r\n                                            'text-green-500': currentStep > STEPS.startBot,\r\n                                        })}\r\n                                    >\r\n                                        Start bot\r\n                                    </span>\r\n                                </div>\r\n                                <FontAwesomeIcon\r\n                                    icon={currentStep > STEPS.startBot ? 'grip-lines' : 'ellipsis-h'}\r\n                                    className={classNames(\r\n                                        'text-gray-400 transform rotate-90 xl:rotate-0 ml-2 xl:ml-0',\r\n                                        {\r\n                                            'text-green-500': currentStep > STEPS.startBot,\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                <div\r\n                                    className='flex items-center cursor-pointer'\r\n                                    onClick={() => setCurrentStep(STEPS.copyId)}\r\n                                >\r\n                                    <span\r\n                                        className={classNames(\r\n                                            'rounded-full shadow w-8 h-8 font-semibold mr-2 flex justify-center items-center cursor-pointer',\r\n                                            {\r\n                                                'bg-white text-indigo-600': currentStep < STEPS.copyId,\r\n                                                'bg-indigo-600 text-white': currentStep === STEPS.copyId,\r\n                                                'bg-green-400 text-white': currentStep > STEPS.copyId,\r\n                                            }\r\n                                        )}\r\n                                    >\r\n                                        {STEPS.copyId}\r\n                                    </span>\r\n                                    <span\r\n                                        className={classNames('cursor-pointer', {\r\n                                            'text-indigo-700': currentStep === STEPS.copyId,\r\n                                            'text-green-500': currentStep > STEPS.copyId,\r\n                                        })}\r\n                                    >\r\n                                        Copy Telegram ID\r\n                                    </span>\r\n                                </div>\r\n                                <FontAwesomeIcon\r\n                                    icon={currentStep > STEPS.copyId ? 'grip-lines' : 'ellipsis-h'}\r\n                                    className={classNames(\r\n                                        'text-gray-400 transform rotate-90 xl:rotate-0 ml-2 xl:ml-0',\r\n                                        {\r\n                                            'text-green-500': currentStep > STEPS.copyId,\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                <div\r\n                                    className='flex items-center cursor-pointer'\r\n                                    onClick={() => setCurrentStep(STEPS.enterId)}\r\n                                >\r\n                                    <span\r\n                                        className={classNames(\r\n                                            'rounded-full shadow w-8 h-8 font-semibold mr-2 flex justify-center items-center cursor-pointer',\r\n                                            {\r\n                                                'bg-indigo-600 text-white': currentStep === STEPS.enterId,\r\n                                                'bg-white text-indigo-600': currentStep < STEPS.enterId,\r\n                                            }\r\n                                        )}\r\n                                    >\r\n                                        {STEPS.enterId}\r\n                                    </span>\r\n                                    <span\r\n                                        className={classNames('cursor-pointer', {\r\n                                            'text-indigo-700': currentStep === STEPS.enterId,\r\n                                            'text-green-500': currentStep > STEPS.enterId,\r\n                                        })}\r\n                                    >\r\n                                        Enter Telegram ID\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <Steps\r\n                                steps={STEPS}\r\n                                currentStep={currentStep}\r\n                                telegramId={telegramId}\r\n                                setTelegramId={setTelegramId}\r\n                            />\r\n                        </div>\r\n                        <div className='flex flex-col justify-center items-center'>\r\n                            <Button\r\n                                className={'bg-indigo-600 hover:bg-indigo-700'}\r\n                                type={'primary'}\r\n                                onClick={onNextStepClick}\r\n                            >\r\n                                {currentStep === STEPS.enterId ? 'Connect' : 'Next'}\r\n                            </Button>\r\n                            <Button\r\n                                className={classNames('mt-3', {\r\n                                    invisible: currentStep === STEPS.startBot,\r\n                                })}\r\n                                type={'link'}\r\n                                onClick={onPreviousStepClick}\r\n                            >\r\n                                Go back\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTelegram.propTypes = {};\r\n\r\nexport default Telegram;\r\n"]},"metadata":{},"sourceType":"module"}