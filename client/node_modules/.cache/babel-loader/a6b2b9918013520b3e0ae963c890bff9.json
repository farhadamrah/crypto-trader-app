{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Routes\\\\Routes.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\nimport { isPrivateRoute } from '../../utils/route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routes = props => {\n  _s();\n\n  let location = useLocation();\n\n  const routes = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.login.path,\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.register.path,\n      component: Register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.dashboard.path,\n      component: Dashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  return isPrivateRoute(location.pathname) ? /*#__PURE__*/_jsxDEV(Layout, {\n    children: routes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 48\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: routes\n  }, void 0, false);\n};\n\n_s(Routes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Routes;\nRoutes.propTypes = {};\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Routes/Routes.js"],"names":["PropTypes","Route","useLocation","ROUTES","Login","Register","Dashboard","Layout","isPrivateRoute","Routes","props","location","routes","login","path","register","dashboard","pathname","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,MAAIC,QAAQ,GAAGT,WAAW,EAA1B;;AAEA,QAAMU,MAAM,gBACR;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAET,MAAM,CAACU,KAAP,CAAaC,IAA1B;AAAgC,MAAA,SAAS,EAAEV;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED,MAAM,CAACY,QAAP,CAAgBD,IAA7B;AAAmC,MAAA,SAAS,EAAET;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,MAAM,CAACa,SAAP,CAAiBF,IAA9B;AAAoC,MAAA,SAAS,EAAER;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;;AAQA,SAAOE,cAAc,CAACG,QAAQ,CAACM,QAAV,CAAd,gBAAoC,QAAC,MAAD;AAAA,cAASL;AAAT;AAAA;AAAA;AAAA;AAAA,UAApC,gBAAgE;AAAA,cAAGA;AAAH,mBAAvE;AACH,CAZD;;GAAMH,M;UACaP,W;;;KADbO,M;AAcNA,MAAM,CAACS,SAAP,GAAmB,EAAnB;AAEA,eAAeT,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\nimport { isPrivateRoute } from '../../utils/route';\n\nconst Routes = props => {\n    let location = useLocation();\n\n    const routes = (\n        <>\n            <Route path={ROUTES.login.path} component={Login} />\n            <Route path={ROUTES.register.path} component={Register} />\n            <Route path={ROUTES.dashboard.path} component={Dashboard} />\n        </>\n    );\n\n    return isPrivateRoute(location.pathname) ? <Layout>{routes}</Layout> : <>{routes}</>;\n};\n\nRoutes.propTypes = {};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}