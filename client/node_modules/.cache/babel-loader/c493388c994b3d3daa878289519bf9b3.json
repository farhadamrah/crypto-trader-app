{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Routes\\\\PrivateRoutes.js\";\nimport PropTypes from 'prop-types';\nimport { ROUTES } from '../../config/constants';\nimport Layout from '../Layout/Layout';\nimport PrivateRoute from '../shared/PrivateRoute/PrivateRoute';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Settings from '../Settings/Settings';\nimport Configurations from '../Configurations/Configurations';\nimport { fetchCurrentUser } from '../../redux/actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoutes = props => {\n  const onFetchCurrentUser = () => {\n    console.log(fetchCurrentUser.data);\n  };\n\n  onFetchCurrentUser();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n      exact: true,\n      path: ROUTES.dashboard.path,\n      component: Dashboard,\n      isAuthenticated: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: ROUTES.settings.path,\n      component: Settings,\n      isAuthenticated: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      exact: true,\n      path: ROUTES.configurations.path,\n      component: Configurations,\n      isAuthenticated: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRoutes;\nPrivateRoutes.propTypes = {};\nexport default PrivateRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Routes/PrivateRoutes.js"],"names":["PropTypes","ROUTES","Layout","PrivateRoute","Dashboard","Settings","Configurations","fetchCurrentUser","PrivateRoutes","props","onFetchCurrentUser","console","log","data","dashboard","path","settings","configurations","propTypes"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,QAAMC,kBAAkB,GAAG,MAAM;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,gBAAgB,CAACM,IAA7B;AACH,GAFD;;AAIAH,EAAAA,kBAAkB;AAElB,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAET,MAAM,CAACa,SAAP,CAAiBC,IAA3C;AAAiD,MAAA,SAAS,EAAEX,SAA5D;AAAuE,MAAA,eAAe,EAAE;AAAxF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH,MAAM,CAACe,QAAP,CAAgBD,IAApC;AAA0C,MAAA,SAAS,EAAEV,QAArD;AAA+D,MAAA,eAAe,EAAE;AAAhF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAEJ,MAAM,CAACgB,cAAP,CAAsBF,IAAhD;AAAsD,MAAA,SAAS,EAAET,cAAjE;AAAiF,MAAA,eAAe,EAAE;AAAlG;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAdD;;KAAME,a;AAgBNA,aAAa,CAACU,SAAd,GAA0B,EAA1B;AAEA,eAAeV,aAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { ROUTES } from '../../config/constants';\nimport Layout from '../Layout/Layout';\nimport PrivateRoute from '../shared/PrivateRoute/PrivateRoute';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Settings from '../Settings/Settings';\nimport Configurations from '../Configurations/Configurations';\nimport { fetchCurrentUser } from '../../redux/actions/auth';\n\nconst PrivateRoutes = props => {\n    const onFetchCurrentUser = () => {\n        console.log(fetchCurrentUser.data);\n    };\n\n    onFetchCurrentUser();\n\n    return (\n        <Layout>\n            <PrivateRoute exact path={ROUTES.dashboard.path} component={Dashboard} isAuthenticated={true} />\n            <PrivateRoute path={ROUTES.settings.path} component={Settings} isAuthenticated={true} />\n            <PrivateRoute exact path={ROUTES.configurations.path} component={Configurations} isAuthenticated={true} />\n        </Layout>\n    );\n};\n\nPrivateRoutes.propTypes = {};\n\nexport default PrivateRoutes;\n"]},"metadata":{},"sourceType":"module"}