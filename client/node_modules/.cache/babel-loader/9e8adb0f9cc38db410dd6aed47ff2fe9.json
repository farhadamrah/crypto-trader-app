{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Routes\\\\Routes.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\nimport { isPrivateRoute } from '../../utils/route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst routes = `\n    <Route path={ROUTES.login.path} component={Login} />\n    <Route path={ROUTES.register.path} component={Register} />\n    <Route path={ROUTES.dashboard.path} component={Dashboard}  />\n`;\n\nconst Routes = props => {\n  _s();\n\n  let location = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isPrivateRoute(location.pathname) ? /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.login.path,\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.register.path,\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.dashboard.path,\n        component: Dashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) : routes\n  }, void 0, false);\n};\n\n_s(Routes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Routes;\nRoutes.propTypes = {\n  path: PropTypes.oneOf(Object.values(ROUTES))\n};\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Routes/Routes.js"],"names":["PropTypes","Route","useLocation","ROUTES","Login","Register","Dashboard","Layout","isPrivateRoute","routes","Routes","props","location","pathname","login","path","register","dashboard","propTypes","oneOf","Object","values"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,MAAMC,MAAM,GAAI;AAChB;AACA;AACA;AACA,CAJA;;AAMA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,MAAIC,QAAQ,GAAGV,WAAW,EAA1B;AAEA,sBACI;AAAA,cACKM,cAAc,CAACI,QAAQ,CAACC,QAAV,CAAd,gBACG,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEV,MAAM,CAACW,KAAP,CAAaC,IAA1B;AAAgC,QAAA,SAAS,EAAEX;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAED,MAAM,CAACa,QAAP,CAAgBD,IAA7B;AAAmC,QAAA,SAAS,EAAEV;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEF,MAAM,CAACc,SAAP,CAAiBF,IAA9B;AAAoC,QAAA,SAAS,EAAET;AAA/C;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAOGG;AARR,mBADJ;AAaH,CAhBD;;GAAMC,M;UACaR,W;;;KADbQ,M;AAkBNA,MAAM,CAACQ,SAAP,GAAmB;AACfH,EAAAA,IAAI,EAAEf,SAAS,CAACmB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAclB,MAAd,CAAhB;AADS,CAAnB;AAIA,eAAeO,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\n\nimport { isPrivateRoute } from '../../utils/route';\n\nconst routes = `\n    <Route path={ROUTES.login.path} component={Login} />\n    <Route path={ROUTES.register.path} component={Register} />\n    <Route path={ROUTES.dashboard.path} component={Dashboard}  />\n`;\n\nconst Routes = props => {\n    let location = useLocation();\n\n    return (\n        <>\n            {isPrivateRoute(location.pathname) ? (\n                <Layout>\n                    <Route path={ROUTES.login.path} component={Login} />\n                    <Route path={ROUTES.register.path} component={Register} />\n                    <Route path={ROUTES.dashboard.path} component={Dashboard} />\n                </Layout>\n            ) : (\n                routes\n            )}\n        </>\n    );\n};\n\nRoutes.propTypes = {\n    path: PropTypes.oneOf(Object.values(ROUTES)),\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}