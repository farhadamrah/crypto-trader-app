{"ast":null,"code":"import * as TYPES from '../types';\nexport const destroyAllMessageComponents = () => ({\n  type: TYPES.DESTROY_ALL_MESSAGE_COMPONENTS\n});\nexport const showMessageComponent = (type, message, {\n  duration = 2,\n  destroyAll = false\n} = {}) => dispatch => {\n  const messageId = new Date().getTime();\n\n  if (destroyAll) {\n    dispatch(destroyAllMessageComponents());\n  }\n\n  dispatch({\n    type: TYPES.SHOW_MESSAGE_COMPONENT,\n    payload: {\n      id: messageId,\n      type,\n      message\n    }\n  });\n  setTimeout(() => {\n    dispatch(destroyMessageComponent(messageId));\n  }, duration * 1000);\n  return messageId;\n};\nexport const destroyMessageComponent = messageId => ({\n  type: TYPES.DESTROY_MESSAGE_COMPONENT,\n  payload: messageId\n});","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/redux/actions/components.js"],"names":["TYPES","destroyAllMessageComponents","type","DESTROY_ALL_MESSAGE_COMPONENTS","showMessageComponent","message","duration","destroyAll","dispatch","messageId","Date","getTime","SHOW_MESSAGE_COMPONENT","payload","id","setTimeout","destroyMessageComponent","DESTROY_MESSAGE_COMPONENT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,OAAO,MAAMC,2BAA2B,GAAG,OAAO;AAC9CC,EAAAA,IAAI,EAAEF,KAAK,CAACG;AADkC,CAAP,CAApC;AAIP,OAAO,MAAMC,oBAAoB,GAAG,CAACF,IAAD,EAAOG,OAAP,EAAgB;AAAEC,EAAAA,QAAQ,GAAG,CAAb;AAAgBC,EAAAA,UAAU,GAAG;AAA7B,IAAuC,EAAvD,KAA8DC,QAAQ,IAAI;AAC1G,QAAMC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;;AAEA,MAAIJ,UAAJ,EAAgB;AACZC,IAAAA,QAAQ,CAACP,2BAA2B,EAA5B,CAAR;AACH;;AAEDO,EAAAA,QAAQ,CAAC;AACLN,IAAAA,IAAI,EAAEF,KAAK,CAACY,sBADP;AAELC,IAAAA,OAAO,EAAE;AACLC,MAAAA,EAAE,EAAEL,SADC;AAELP,MAAAA,IAFK;AAGLG,MAAAA;AAHK;AAFJ,GAAD,CAAR;AASAU,EAAAA,UAAU,CAAC,MAAM;AACbP,IAAAA,QAAQ,CAACQ,uBAAuB,CAACP,SAAD,CAAxB,CAAR;AACH,GAFS,EAEPH,QAAQ,GAAG,IAFJ,CAAV;AAIA,SAAOG,SAAP;AACH,CArBM;AAuBP,OAAO,MAAMO,uBAAuB,GAAGP,SAAS,KAAK;AACjDP,EAAAA,IAAI,EAAEF,KAAK,CAACiB,yBADqC;AAEjDJ,EAAAA,OAAO,EAAEJ;AAFwC,CAAL,CAAzC","sourcesContent":["import * as TYPES from '../types';\r\n\r\nexport const destroyAllMessageComponents = () => ({\r\n    type: TYPES.DESTROY_ALL_MESSAGE_COMPONENTS,\r\n});\r\n\r\nexport const showMessageComponent = (type, message, { duration = 2, destroyAll = false } = {}) => dispatch => {\r\n    const messageId = new Date().getTime();\r\n\r\n    if (destroyAll) {\r\n        dispatch(destroyAllMessageComponents());\r\n    }\r\n\r\n    dispatch({\r\n        type: TYPES.SHOW_MESSAGE_COMPONENT,\r\n        payload: {\r\n            id: messageId,\r\n            type,\r\n            message,\r\n        },\r\n    });\r\n\r\n    setTimeout(() => {\r\n        dispatch(destroyMessageComponent(messageId));\r\n    }, duration * 1000);\r\n\r\n    return messageId;\r\n};\r\n\r\nexport const destroyMessageComponent = messageId => ({\r\n    type: TYPES.DESTROY_MESSAGE_COMPONENT,\r\n    payload: messageId,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}