{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Routes\\\\Routes.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\nimport { isPrivateRoute } from '../../utils/route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst routes = {\n  login: {\n    path: ROUTES.login.path,\n    component: Login\n  },\n  register: {\n    path: ROUTES.register.path,\n    component: Register\n  },\n  dashboard: {\n    path: ROUTES.dashboard.path,\n    component: Dashboard\n  }\n};\n\nconst Routes = props => {\n  _s();\n\n  let location = useLocation();\n  isPrivateRoute(location.pathname);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [routes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        component: route.component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.login.path,\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Routes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Routes;\nRoutes.propTypes = {\n  path: PropTypes.oneOf(Object.values(ROUTES))\n};\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Routes/Routes.js"],"names":["PropTypes","Route","useLocation","ROUTES","Login","Register","Dashboard","Layout","isPrivateRoute","routes","login","path","component","register","dashboard","Routes","props","location","pathname","map","route","propTypes","oneOf","Object","values"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAER,MAAM,CAACO,KAAP,CAAaC,IADhB;AAEHC,IAAAA,SAAS,EAAER;AAFR,GADI;AAKXS,EAAAA,QAAQ,EAAE;AACNF,IAAAA,IAAI,EAAER,MAAM,CAACU,QAAP,CAAgBF,IADhB;AAENC,IAAAA,SAAS,EAAEP;AAFL,GALC;AASXS,EAAAA,SAAS,EAAE;AACPH,IAAAA,IAAI,EAAER,MAAM,CAACW,SAAP,CAAiBH,IADhB;AAEPC,IAAAA,SAAS,EAAEN;AAFJ;AATA,CAAf;;AAeA,MAAMS,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,MAAIC,QAAQ,GAAGf,WAAW,EAA1B;AAEAM,EAAAA,cAAc,CAACS,QAAQ,CAACC,QAAV,CAAd;AAEA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,iBACKT,MAAM,CAACU,GAAP,CAAWC,KAAK,iBACb,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACT,IAAnB;AAAyB,QAAA,SAAS,EAAES,KAAK,CAACR;AAA1C;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAII,QAAC,KAAD;AAAO,QAAA,IAAI,EAAET,MAAM,CAACO,KAAP,CAAaC,IAA1B;AAAgC,QAAA,SAAS,EAAEP;AAA3C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CAfD;;GAAMW,M;UACab,W;;;KADba,M;AAiBNA,MAAM,CAACM,SAAP,GAAmB;AACfV,EAAAA,IAAI,EAAEX,SAAS,CAACsB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAcrB,MAAd,CAAhB;AADS,CAAnB;AAIA,eAAeY,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\n\nimport { isPrivateRoute } from '../../utils/route';\n\nconst routes = {\n    login: {\n        path: ROUTES.login.path,\n        component: Login,\n    },\n    register: {\n        path: ROUTES.register.path,\n        component: Register,\n    },\n    dashboard: {\n        path: ROUTES.dashboard.path,\n        component: Dashboard,\n    },\n};\n\nconst Routes = props => {\n    let location = useLocation();\n\n    isPrivateRoute(location.pathname);\n\n    return (\n        <>\n            <Layout>\n                {routes.map(route => (\n                    <Route path={route.path} component={route.component} />\n                ))}\n                <Route path={ROUTES.login.path} component={Login} />\n            </Layout>\n        </>\n    );\n};\n\nRoutes.propTypes = {\n    path: PropTypes.oneOf(Object.values(ROUTES)),\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}