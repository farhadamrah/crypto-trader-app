{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\shared\\\\Tooltip\\\\Tooltip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tooltip = props => {\n  _s();\n\n  const [showTooltip, setShowTooltip] = useState(false);\n  const {\n    text,\n    position,\n    children,\n    className,\n    ...tooltipProps\n  } = props;\n  const TOOLTIP_STYLES = {\n    [TOOLTIP_POSITION.top]: 'bottom-6 right-24',\n    [TOOLTIP_POSITION.right]: '-top-1 left-20',\n    [TOOLTIP_POSITION.bottom]: 'top-6 right-24',\n    [TOOLTIP_POSITION.left]: '-top-1 right-52'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: text ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      onMouseLeave: () => setShowTooltip(!showTooltip),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `bg-black opacity-70 text-white py-1 text-center w-36 absolute rounded ${showTooltip ? 'opacity-0 invisible' : ''} ${TOOLTIP_STYLES[position]} ${className}`,\n        ...tooltipProps,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Tooltip, \"MlKqB7CDspaiqeinDL2ipSY+OVU=\");\n\n_c = Tooltip;\nTooltip.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired\n};\nexport default Tooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/shared/Tooltip/Tooltip.js"],"names":["React","useState","PropTypes","TOOLTIP_POSITION","Tooltip","props","showTooltip","setShowTooltip","text","position","children","className","tooltipProps","TOOLTIP_STYLES","top","right","bottom","left","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,SAA5B;AAAuC,OAAGC;AAA1C,MAA2DP,KAAjE;AAEA,QAAMQ,cAAc,GAAG;AACnB,KAACV,gBAAgB,CAACW,GAAlB,GAAwB,mBADL;AAEnB,KAACX,gBAAgB,CAACY,KAAlB,GAA0B,gBAFP;AAGnB,KAACZ,gBAAgB,CAACa,MAAlB,GAA2B,gBAHR;AAInB,KAACb,gBAAgB,CAACc,IAAlB,GAAyB;AAJN,GAAvB;AAOA,sBACI;AAAA,cACKT,IAAI,gBACD;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,YAAY,EAAE,MAAMD,cAAc,CAAC,CAACD,WAAF,CAA5D;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,yEACRA,WAAW,GAAG,qBAAH,GAA2B,EACzC,IAAGO,cAAc,CAACJ,QAAD,CAAW,IAAGE,SAAU,EAH9C;AAAA,WAIQC,YAJR;AAAA,kBAMKJ;AANL;AAAA;AAAA;AAAA;AAAA,cADJ,EASKE,QATL;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,GAYD;AAbR,mBADJ;AAiBH,CA7BD;;GAAMN,O;;KAAAA,O;AA+BNA,OAAO,CAACc,SAAR,GAAoB;AAChBP,EAAAA,SAAS,EAAET,SAAS,CAACiB,MADL;AAEhBX,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UAFP;AAGhBX,EAAAA,QAAQ,EAAEP,SAAS,CAACiB,MAAV,CAAiBC;AAHX,CAApB;AAMA,eAAehB,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TOOLTIP_POSITION } from '../../../config/constants';\n\nconst Tooltip = props => {\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    const { text, position, children, className, ...tooltipProps } = props;\n\n    const TOOLTIP_STYLES = {\n        [TOOLTIP_POSITION.top]: 'bottom-6 right-24',\n        [TOOLTIP_POSITION.right]: '-top-1 left-20',\n        [TOOLTIP_POSITION.bottom]: 'top-6 right-24',\n        [TOOLTIP_POSITION.left]: '-top-1 right-52',\n    };\n\n    return (\n        <>\n            {text ? (\n                <div className='relative' onMouseLeave={() => setShowTooltip(!showTooltip)}>\n                    <span\n                        className={`bg-black opacity-70 text-white py-1 text-center w-36 absolute rounded ${\n                            showTooltip ? 'opacity-0 invisible' : ''\n                        } ${TOOLTIP_STYLES[position]} ${className}`}\n                        {...tooltipProps}\n                    >\n                        {text}\n                    </span>\n                    {children}\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nTooltip.propTypes = {\n    className: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}