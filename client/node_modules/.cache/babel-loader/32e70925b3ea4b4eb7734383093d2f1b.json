{"ast":null,"code":"import axios from '../config/axios';\nimport { ENV } from '../config/env';\nconst UserService = {};\n\nUserService.updateUser = async ({\n  id,\n  ...body\n}) => {\n  const result = await axios.put(`${ENV.baseApiUrl}/users/${id}`, body);\n  return result.data;\n};\n\nUserService.updatePassword = async ({\n  id,\n  ...body\n}, confirmationToken) => {\n  const result = await axios.patch(`${ENV.baseApiUrl}/users/${id}/password`, body, {\n    headers: {\n      'app-confirmation-token': confirmationToken\n    }\n  });\n  return result.data;\n};\n\nUserService.connectTelegram = async ({\n  id,\n  ...body\n}) => {\n  const result = await axios.patch(`${ENV.baseApiUrl}/users/${id}/telegram`, body);\n  return result.data;\n};\n\nUserService.disconnectTelegram = async (id, confirmationToken) => {\n  const result = await axios.delete(`${ENV.baseApiUrl}/users/${id}/telegram`, {\n    headers: {\n      'app-confirmation-token': confirmationToken\n    }\n  });\n  return result.data;\n};\n\nUserService.updateActiveConfiguration = async ({\n  id,\n  ...body\n}) => {\n  const result = await axios.patch(`${ENV.baseApiUrl}/users/${id}/configuration`, body);\n  return result.data;\n};\n\nUserService.deleteUser = async id => {\n  const result = await axios.delete(`${ENV.baseApiUrl}/users/${id}`);\n  return result.data;\n};\n\nexport default UserService;","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/services/UserService.js"],"names":["axios","ENV","UserService","updateUser","id","body","result","put","baseApiUrl","data","updatePassword","confirmationToken","patch","headers","connectTelegram","disconnectTelegram","delete","updateActiveConfiguration","deleteUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEAA,WAAW,CAACC,UAAZ,GAAyB,OAAO;AAAEC,EAAAA,EAAF;AAAM,KAAGC;AAAT,CAAP,KAA2B;AAChD,QAAMC,MAAM,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,GAAG,CAACO,UAAW,UAASJ,EAAG,EAAxC,EAA2CC,IAA3C,CAArB;AAEA,SAAOC,MAAM,CAACG,IAAd;AACH,CAJD;;AAMAP,WAAW,CAACQ,cAAZ,GAA6B,OAAO;AAAEN,EAAAA,EAAF;AAAM,KAAGC;AAAT,CAAP,EAAwBM,iBAAxB,KAA8C;AACvE,QAAML,MAAM,GAAG,MAAMN,KAAK,CAACY,KAAN,CAAa,GAAEX,GAAG,CAACO,UAAW,UAASJ,EAAG,WAA1C,EAAsDC,IAAtD,EAA4D;AAC7EQ,IAAAA,OAAO,EAAE;AAAE,gCAA0BF;AAA5B;AADoE,GAA5D,CAArB;AAIA,SAAOL,MAAM,CAACG,IAAd;AACH,CAND;;AAQAP,WAAW,CAACY,eAAZ,GAA8B,OAAO;AAAEV,EAAAA,EAAF;AAAM,KAAGC;AAAT,CAAP,KAA2B;AACrD,QAAMC,MAAM,GAAG,MAAMN,KAAK,CAACY,KAAN,CAAa,GAAEX,GAAG,CAACO,UAAW,UAASJ,EAAG,WAA1C,EAAsDC,IAAtD,CAArB;AAEA,SAAOC,MAAM,CAACG,IAAd;AACH,CAJD;;AAMAP,WAAW,CAACa,kBAAZ,GAAiC,OAAOX,EAAP,EAAWO,iBAAX,KAAiC;AAC9D,QAAML,MAAM,GAAG,MAAMN,KAAK,CAACgB,MAAN,CAAc,GAAEf,GAAG,CAACO,UAAW,UAASJ,EAAG,WAA3C,EAAuD;AACxES,IAAAA,OAAO,EAAE;AAAE,gCAA0BF;AAA5B;AAD+D,GAAvD,CAArB;AAIA,SAAOL,MAAM,CAACG,IAAd;AACH,CAND;;AAQAP,WAAW,CAACe,yBAAZ,GAAwC,OAAO;AAAEb,EAAAA,EAAF;AAAM,KAAGC;AAAT,CAAP,KAA2B;AAC/D,QAAMC,MAAM,GAAG,MAAMN,KAAK,CAACY,KAAN,CAAa,GAAEX,GAAG,CAACO,UAAW,UAASJ,EAAG,gBAA1C,EAA2DC,IAA3D,CAArB;AAEA,SAAOC,MAAM,CAACG,IAAd;AACH,CAJD;;AAMAP,WAAW,CAACgB,UAAZ,GAAyB,MAAMd,EAAN,IAAY;AACjC,QAAME,MAAM,GAAG,MAAMN,KAAK,CAACgB,MAAN,CAAc,GAAEf,GAAG,CAACO,UAAW,UAASJ,EAAG,EAA3C,CAArB;AAEA,SAAOE,MAAM,CAACG,IAAd;AACH,CAJD;;AAMA,eAAeP,WAAf","sourcesContent":["import axios from '../config/axios';\r\nimport { ENV } from '../config/env';\r\n\r\nconst UserService = {};\r\n\r\nUserService.updateUser = async ({ id, ...body }) => {\r\n    const result = await axios.put(`${ENV.baseApiUrl}/users/${id}`, body);\r\n\r\n    return result.data;\r\n};\r\n\r\nUserService.updatePassword = async ({ id, ...body }, confirmationToken) => {\r\n    const result = await axios.patch(`${ENV.baseApiUrl}/users/${id}/password`, body, {\r\n        headers: { 'app-confirmation-token': confirmationToken },\r\n    });\r\n\r\n    return result.data;\r\n};\r\n\r\nUserService.connectTelegram = async ({ id, ...body }) => {\r\n    const result = await axios.patch(`${ENV.baseApiUrl}/users/${id}/telegram`, body);\r\n\r\n    return result.data;\r\n};\r\n\r\nUserService.disconnectTelegram = async (id, confirmationToken) => {\r\n    const result = await axios.delete(`${ENV.baseApiUrl}/users/${id}/telegram`, {\r\n        headers: { 'app-confirmation-token': confirmationToken },\r\n    });\r\n\r\n    return result.data;\r\n};\r\n\r\nUserService.updateActiveConfiguration = async ({ id, ...body }) => {\r\n    const result = await axios.patch(`${ENV.baseApiUrl}/users/${id}/configuration`, body);\r\n\r\n    return result.data;\r\n};\r\n\r\nUserService.deleteUser = async id => {\r\n    const result = await axios.delete(`${ENV.baseApiUrl}/users/${id}`);\r\n\r\n    return result.data;\r\n};\r\n\r\nexport default UserService;\r\n"]},"metadata":{},"sourceType":"module"}