{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Settings\\\\Section\\\\Section.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '../../shared/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Section = props => {\n  _s();\n\n  const [isEdited, setIsEdited] = useState(true);\n  const {\n    title,\n    children,\n    ...sectionProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col mb-16 bg-red\",\n    ...sectionProps,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-5\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"xl:flex mb-10\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), isEdited ? /*#__PURE__*/_jsxDEV(Button, {\n      type: 'primary',\n      className: 'w-24 rounded-full',\n      onClick: () => setIsEdited(!isEdited),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: 'link',\n        className: 'mr-8',\n        onClick: () => setIsEdited(!isEdited),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: 'primary',\n        className: 'w-24 rounded-full',\n        onClick: () => setIsEdited(!isEdited),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Section, \"5g9V6NkQWVg7Umviz5cqA96t/4w=\");\n\n_c = Section;\nSection.propTypes = {\n  title: PropTypes.string\n};\nexport default Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Settings/Section/Section.js"],"names":["PropTypes","useState","Button","Section","props","isEdited","setIsEdited","title","children","sectionProps","propTypes","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmB,OAAGC;AAAtB,MAAuCL,KAA7C;AAEA,sBACI;AAAS,IAAA,SAAS,EAAC,4BAAnB;AAAA,OAAoDK,YAApD;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA,gBAA6CF;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKH,QAAQ,gBACL,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,SAAd;AAAyB,MAAA,SAAS,EAAE,mBAApC;AAAyD,MAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,CAACD,QAAF,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAKL;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,MAAd;AAAsB,QAAA,SAAS,EAAE,MAAjC;AAAyC,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,CAACD,QAAF,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,SAAd;AAAyB,QAAA,SAAS,EAAE,mBAApC;AAAyD,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,CAACD,QAAF,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzBD;;GAAMF,O;;KAAAA,O;AA2BNA,OAAO,CAACO,SAAR,GAAoB;AAChBH,EAAAA,KAAK,EAAEP,SAAS,CAACW;AADD,CAApB;AAIA,eAAeR,OAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '../../shared/Button/Button';\n\nconst Section = props => {\n    const [isEdited, setIsEdited] = useState(true);\n\n    const { title, children, ...sectionProps } = props;\n\n    return (\n        <section className='flex flex-col mb-16 bg-red' {...sectionProps}>\n            <h1 className='text-2xl font-semibold mb-5'>{title}</h1>\n            <div className='xl:flex mb-10'>{children}</div>\n            {isEdited ? (\n                <Button type={'primary'} className={'w-24 rounded-full'} onClick={() => setIsEdited(!isEdited)}>\n                    Edit\n                </Button>\n            ) : (\n                <div>\n                    <Button type={'link'} className={'mr-8'} onClick={() => setIsEdited(!isEdited)}>\n                        Cancel\n                    </Button>\n                    <Button type={'primary'} className={'w-24 rounded-full'} onClick={() => setIsEdited(!isEdited)}>\n                        Save\n                    </Button>\n                </div>\n            )}\n        </section>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}