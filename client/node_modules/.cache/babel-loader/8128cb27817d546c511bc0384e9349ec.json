{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Settings\\\\Security\\\\PasswordUpdateModal\\\\PasswordUpdateModal.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport Modal from '../../../shared/Modal/Modal';\nimport Input from '../../../shared/Input/Input';\nimport FormItem from '../../../shared/Form/FormItem/FormItem';\nimport { useForm } from 'react-hook-form';\nimport { updatePassword } from '../../../../redux/actions/users';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordUpdateModal = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const {\n    isVisible,\n    hideModal\n  } = props;\n  const {\n    register: registerFormField,\n    handleSubmit,\n    reset,\n    formState: {\n      isDirty: hasUnsavedChanged\n    }\n  } = useForm({});\n\n  const onClose = () => {\n    hideModal();\n    resetForm();\n  };\n\n  const onOk = () => {\n    handleSubmit(async values => {\n      const updatedUser = await dispatch(updatePassword({ ...values,\n        id: user.id\n      }));\n\n      if (updatedUser) {\n        hideModal();\n        resetForm();\n      }\n    })();\n  };\n\n  const resetForm = () => {\n    reset({\n      password: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isVisible: isVisible,\n    onClose: onClose,\n    onOk: onOk,\n    title: 'Update password',\n    buttonProps: {\n      okText: 'Update'\n    },\n    showClose: true,\n    showFooter: true,\n    children: /*#__PURE__*/_jsxDEV(FormItem, {\n      label: 'Password',\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: 'Password',\n        ...registerFormField('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PasswordUpdateModal, \"YV6wjyDDzHpFqIPvUuPCk8cuEZ0=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = PasswordUpdateModal;\nPasswordUpdateModal.propTypes = {};\nexport default PasswordUpdateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordUpdateModal\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Settings/Security/PasswordUpdateModal/PasswordUpdateModal.js"],"names":["PropTypes","Modal","Input","FormItem","useForm","updatePassword","useDispatch","useSelector","PasswordUpdateModal","props","dispatch","user","state","auth","isVisible","hideModal","register","registerFormField","handleSubmit","reset","formState","isDirty","hasUnsavedChanged","onClose","resetForm","onOk","values","updatedUser","id","password","okText","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AAAA;;AACjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,IAAI,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,IAArB,CAAxB;AAEA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BN,KAAjC;AAEA,QAAM;AACFO,IAAAA,QAAQ,EAAEC,iBADR;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAEC;AAAX;AAJT,MAKFlB,OAAO,CAAC,EAAD,CALX;;AAOA,QAAMmB,OAAO,GAAG,MAAM;AAClBR,IAAAA,SAAS;AACTS,IAAAA,SAAS;AACZ,GAHD;;AAKA,QAAMC,IAAI,GAAG,MAAM;AACfP,IAAAA,YAAY,CAAC,MAAMQ,MAAN,IAAgB;AACzB,YAAMC,WAAW,GAAG,MAAMjB,QAAQ,CAACL,cAAc,CAAC,EAAE,GAAGqB,MAAL;AAAaE,QAAAA,EAAE,EAAEjB,IAAI,CAACiB;AAAtB,OAAD,CAAf,CAAlC;;AAEA,UAAID,WAAJ,EAAiB;AACbZ,QAAAA,SAAS;AACTS,QAAAA,SAAS;AACZ;AACJ,KAPW,CAAZ;AAQH,GATD;;AAWA,QAAMA,SAAS,GAAG,MAAM;AACpBL,IAAAA,KAAK,CAAC;AAAEU,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAL;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD;AACI,IAAA,SAAS,EAAEf,SADf;AAEI,IAAA,OAAO,EAAES,OAFb;AAGI,IAAA,IAAI,EAAEE,IAHV;AAII,IAAA,KAAK,EAAE,iBAJX;AAKI,IAAA,WAAW,EAAE;AACTK,MAAAA,MAAM,EAAE;AADC,KALjB;AAQI,IAAA,SAAS,MARb;AASI,IAAA,UAAU,MATd;AAAA,2BAWI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,UAAjB;AAAA,6BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,WAAW,EAAE,UAA7B;AAAA,WAA6Cb,iBAAiB,CAAC,UAAD;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAnDD;;GAAMT,mB;UACeF,W,EAEJC,W,EASTH,O;;;KAZFI,mB;AAqDNA,mBAAmB,CAACuB,SAApB,GAAgC,EAAhC;AAEA,eAAevB,mBAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport Modal from '../../../shared/Modal/Modal';\r\nimport Input from '../../../shared/Input/Input';\r\nimport FormItem from '../../../shared/Form/FormItem/FormItem';\r\nimport { useForm } from 'react-hook-form';\r\nimport { updatePassword } from '../../../../redux/actions/users';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst PasswordUpdateModal = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    const { isVisible, hideModal } = props;\r\n\r\n    const {\r\n        register: registerFormField,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { isDirty: hasUnsavedChanged },\r\n    } = useForm({});\r\n\r\n    const onClose = () => {\r\n        hideModal();\r\n        resetForm();\r\n    };\r\n\r\n    const onOk = () => {\r\n        handleSubmit(async values => {\r\n            const updatedUser = await dispatch(updatePassword({ ...values, id: user.id }));\r\n\r\n            if (updatedUser) {\r\n                hideModal();\r\n                resetForm();\r\n            }\r\n        })();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        reset({ password: '' });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isVisible={isVisible}\r\n            onClose={onClose}\r\n            onOk={onOk}\r\n            title={'Update password'}\r\n            buttonProps={{\r\n                okText: 'Update',\r\n            }}\r\n            showClose\r\n            showFooter\r\n        >\r\n            <FormItem label={'Password'}>\r\n                <Input.Password placeholder={'Password'} {...registerFormField('password')} />\r\n            </FormItem>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nPasswordUpdateModal.propTypes = {};\r\n\r\nexport default PasswordUpdateModal;\r\n"]},"metadata":{},"sourceType":"module"}