{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARHAD\\\\Documents\\\\GitHub\\\\crypto-trader\\\\client\\\\src\\\\components\\\\Routes\\\\Routes.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\nimport { isPrivateRoute } from '../../utils/route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst routes = /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: ROUTES.login.path,\n    component: Login\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: ROUTES.register.path,\n    component: Register\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: ROUTES.dashboard.path,\n    component: Dashboard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this)]\n}, void 0, true);\n\nconst Routes = props => {\n  _s();\n\n  let location = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isPrivateRoute(location.pathname) ? /*#__PURE__*/_jsxDEV(Layout, {\n      children: routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"routes\"\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(Routes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Routes;\nRoutes.propTypes = {\n  path: PropTypes.oneOf(Object.values(ROUTES))\n};\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/FARHAD/Documents/GitHub/crypto-trader/client/src/components/Routes/Routes.js"],"names":["PropTypes","Route","useLocation","ROUTES","Login","Register","Dashboard","Layout","isPrivateRoute","routes","login","path","register","dashboard","Routes","props","location","pathname","propTypes","oneOf","Object","values"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;;;;AAEA,MAAMC,MAAM,gBACR;AAAA,0BACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEN,MAAM,CAACO,KAAP,CAAaC,IAA1B;AAAgC,IAAA,SAAS,EAAEP;AAA3C;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAED,MAAM,CAACS,QAAP,CAAgBD,IAA7B;AAAmC,IAAA,SAAS,EAAEN;AAA9C;AAAA;AAAA;AAAA;AAAA,UAFJ,eAGI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,MAAM,CAACU,SAAP,CAAiBF,IAA9B;AAAoC,IAAA,SAAS,EAAEL;AAA/C;AAAA;AAAA;AAAA;AAAA,UAHJ;AAAA,gBADJ;;AAQA,MAAMQ,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,MAAIC,QAAQ,GAAGd,WAAW,EAA1B;AAEA,sBAAO;AAAA,cAAGM,cAAc,CAACQ,QAAQ,CAACC,QAAV,CAAd,gBAAoC,QAAC,MAAD;AAAA,gBAASR;AAAT;AAAA;AAAA;AAAA;AAAA,YAApC,gBAAgE;AAAA;AAAA;AAAnE,mBAAP;AACH,CAJD;;GAAMK,M;UACaZ,W;;;KADbY,M;AAMNA,MAAM,CAACI,SAAP,GAAmB;AACfP,EAAAA,IAAI,EAAEX,SAAS,CAACmB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAclB,MAAd,CAAhB;AADS,CAAnB;AAIA,eAAeW,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Route, useLocation } from 'react-router-dom';\nimport { ROUTES } from '../../config/constants';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Layout from '../Layout/Layout';\n\nimport { isPrivateRoute } from '../../utils/route';\n\nconst routes = (\n    <>\n        <Route path={ROUTES.login.path} component={Login} />\n        <Route path={ROUTES.register.path} component={Register} />\n        <Route path={ROUTES.dashboard.path} component={Dashboard} />\n    </>\n);\n\nconst Routes = props => {\n    let location = useLocation();\n\n    return <>{isPrivateRoute(location.pathname) ? <Layout>{routes}</Layout> : <>routes</>}</>;\n};\n\nRoutes.propTypes = {\n    path: PropTypes.oneOf(Object.values(ROUTES)),\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}